// Package wazuh provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package rest

import (
	"encoding/json"
	"fmt"
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
	"github.com/pkg/errors"
)

// ActiveResponseBody defines model for ActiveResponseBody.
type ActiveResponseBody struct {

	// Command arguments
	Arguments *[]string `json:"arguments,omitempty"`

	// Command running in the agent. If this value starts by `!`, then it refers to a script name instead of a command name
	Command string `json:"command"`

	// Whether the specified command is a custom command or not
	Custom *bool `json:"custom,omitempty"`
}

// Agent defines model for Agent.
type Agent struct {
	// Embedded struct due to allOf(#/components/schemas/AgentSimple)
	AgentSimple `yaml:",inline"`
	// Embedded struct due to allOf(#/components/schemas/ExtraAgentFields)
	ExtraAgentFields `yaml:",inline"`
}

// AgentConfiguration defines model for AgentConfiguration.
type AgentConfiguration map[string]interface{}

// AgentDistinct defines model for AgentDistinct.
type AgentDistinct struct {
	// Embedded struct due to allOf(#/components/schemas/AgentSimple)
	AgentSimple `yaml:",inline"`
	// Embedded struct due to allOf(#/components/schemas/ExtraAgentFields)
	ExtraAgentFields `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Number of agents with the specified unique fields
	Count *int32 `json:"count,omitempty"`
}

// AgentGroup defines model for AgentGroup.
type AgentGroup struct {

	// MD5 checksum of the group configuration file (agent.conf)
	ConfigSum string `json:"configSum"`

	// Number of agents belonging to that group
	Count int `json:"count"`

	// MD5 checksum of all group shared files merged in a single one (merged.mg)
	MergedSum *string `json:"mergedSum,omitempty"`
	Name      string  `json:"name"`
}

// AgentGroupDeleted defines model for AgentGroupDeleted.
type AgentGroupDeleted struct {

	// List of agents which belonged to the group and might have been reassigned to group default
	AffectedAgents []AgentID `json:"affected_agents"`
}

// AgentID defines model for AgentID.
type AgentID string

// AgentIDDELETE defines model for AgentID_DELETE.
type AgentIDDELETE string

// AgentIdKey defines model for AgentIdKey.
type AgentIdKey struct {

	// Agent ID
	Id  AgentID `json:"id"`
	Key string  `json:"key"`
}

// AgentSimple defines model for AgentSimple.
type AgentSimple struct {

	// Agent ID
	Id *AgentID `json:"id,omitempty"`

	// Agent name used at registration process
	Name *string `json:"name,omitempty"`

	// Wazuh version the agent has installed
	Version *string `json:"version,omitempty"`
}

// AgentStatus defines model for AgentStatus.
type AgentStatus string

// List of AgentStatus
const (
	AgentStatus_active          AgentStatus = "active"
	AgentStatus_disconnected    AgentStatus = "disconnected"
	AgentStatus_never_connected AgentStatus = "never_connected"
	AgentStatus_pending         AgentStatus = "pending"
)

// AgentSynced defines model for AgentSynced.
type AgentSynced struct {

	// Agent ID
	Id *string `json:"id,omitempty"`

	// Sync info
	Synced *bool `json:"synced,omitempty"`
}

// AgentsSummaryStatus defines model for AgentsSummaryStatus.
type AgentsSummaryStatus struct {
	Active         *int32 `json:"active,omitempty"`
	Disconnected   *int32 `json:"disconnected,omitempty"`
	NeverConnected *int32 `json:"never_connected,omitempty"`
	Pending        *int32 `json:"pending,omitempty"`
	Total          *int32 `json:"total,omitempty"`
}

// AllItemsResponse defines model for AllItemsResponse.
type AllItemsResponse struct {

	// List of items that have failed applying the requested operation
	FailedItems []SimpleApiError `json:"failed_items"`

	// Number of items that have successfully applied the requested operation
	TotalAffectedItems int32 `json:"total_affected_items"`

	// Number of items that have failed applying the requested operation
	TotalFailedItems int32 `json:"total_failed_items"`
}

// AllItemsResponseAgentIDs defines model for AllItemsResponseAgentIDs.
type AllItemsResponseAgentIDs struct {
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []AgentID `json:"affected_items"`
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
}

// AllItemsResponseAgents defines model for AllItemsResponseAgents.
type AllItemsResponseAgents struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []Agent `json:"affected_items"`
}

// AllItemsResponseAgentsDistinct defines model for AllItemsResponseAgentsDistinct.
type AllItemsResponseAgentsDistinct struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []AgentDistinct `json:"affected_items"`
}

// AllItemsResponseAgentsKeys defines model for AllItemsResponseAgentsKeys.
type AllItemsResponseAgentsKeys struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []AgentIdKey `json:"affected_items"`
}

// AllItemsResponseAgentsSimple defines model for AllItemsResponseAgentsSimple.
type AllItemsResponseAgentsSimple struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []AgentSimple `json:"affected_items"`
}

// AllItemsResponseAgentsSynced defines model for AllItemsResponseAgentsSynced.
type AllItemsResponseAgentsSynced struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []AgentSynced `json:"affected_items"`
}

// AllItemsResponseCiscatResult defines model for AllItemsResponseCiscatResult.
type AllItemsResponseCiscatResult struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []CiscatResults `json:"affected_items"`
}

// AllItemsResponseClusterNodes defines model for AllItemsResponseClusterNodes.
type AllItemsResponseClusterNodes struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []ClusterNode `json:"affected_items"`
}

// AllItemsResponseDecoders defines model for AllItemsResponseDecoders.
type AllItemsResponseDecoders struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []Decoder `json:"affected_items"`
}

// AllItemsResponseDecodersFiles defines model for AllItemsResponseDecodersFiles.
type AllItemsResponseDecodersFiles struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []DecoderFile `json:"affected_items"`
}

// AllItemsResponseGroupIDs defines model for AllItemsResponseGroupIDs.
type AllItemsResponseGroupIDs struct {
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []GroupID `json:"affected_items"`
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
}

// AllItemsResponseGroups defines model for AllItemsResponseGroups.
type AllItemsResponseGroups struct {
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []AgentGroupID `json:"affected_items"`
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
}

// AllItemsResponseLists defines model for AllItemsResponseLists.
type AllItemsResponseLists struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []CDBList `json:"affected_items"`
}

// AllItemsResponseListsFiles defines model for AllItemsResponseListsFiles.
type AllItemsResponseListsFiles struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []CDBListFile `json:"affected_items"`
}

// AllItemsResponseNodeHealthcheck defines model for AllItemsResponseNodeHealthcheck.
type AllItemsResponseNodeHealthcheck struct {
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []NodeHealthcheck `json:"affected_items"`
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
}

// AllItemsResponseNodeIDs defines model for AllItemsResponseNodeIDs.
type AllItemsResponseNodeIDs struct {
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []NodeID `json:"affected_items"`
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
}

// AllItemsResponsePolicies defines model for AllItemsResponsePolicies.
type AllItemsResponsePolicies struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []interface{} `json:"affected_items"`
}

// AllItemsResponseRoles defines model for AllItemsResponseRoles.
type AllItemsResponseRoles struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []RolesResponse `json:"affected_items"`
}

// AllItemsResponseRules defines model for AllItemsResponseRules.
type AllItemsResponseRules struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []Rule `json:"affected_items"`
}

// AllItemsResponseRulesFiles defines model for AllItemsResponseRulesFiles.
type AllItemsResponseRulesFiles struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []RuleFile `json:"affected_items"`
}

// AllItemsResponseSCAChecks defines model for AllItemsResponseSCAChecks.
type AllItemsResponseSCAChecks struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []SCAChecks `json:"affected_items"`
}

// AllItemsResponseSCADatabase defines model for AllItemsResponseSCADatabase.
type AllItemsResponseSCADatabase struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []SCADatabase `json:"affected_items"`
}

// AllItemsResponseSyscheckLastScan defines model for AllItemsResponseSyscheckLastScan.
type AllItemsResponseSyscheckLastScan struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []LastScan `json:"affected_items"`
}

// AllItemsResponseSyscheckResult defines model for AllItemsResponseSyscheckResult.
type AllItemsResponseSyscheckResult struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []SyscheckDatabase `json:"affected_items"`
}

// AllItemsResponseSyscollectorHardware defines model for AllItemsResponseSyscollectorHardware.
type AllItemsResponseSyscollectorHardware struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []SyscollectorHardware `json:"affected_items"`
}

// AllItemsResponseSyscollectorHotfixes defines model for AllItemsResponseSyscollectorHotfixes.
type AllItemsResponseSyscollectorHotfixes struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []SyscollectorHotfix `json:"affected_items"`
}

// AllItemsResponseSyscollectorInterface defines model for AllItemsResponseSyscollectorInterface.
type AllItemsResponseSyscollectorInterface struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []SyscollectorInterface `json:"affected_items"`
}

// AllItemsResponseSyscollectorNetwork defines model for AllItemsResponseSyscollectorNetwork.
type AllItemsResponseSyscollectorNetwork struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []SyscollectorNetwork `json:"affected_items"`
}

// AllItemsResponseSyscollectorOS defines model for AllItemsResponseSyscollectorOS.
type AllItemsResponseSyscollectorOS struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []SyscollectorOS `json:"affected_items"`
}

// AllItemsResponseSyscollectorPackages defines model for AllItemsResponseSyscollectorPackages.
type AllItemsResponseSyscollectorPackages struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []SyscollectorPackages `json:"affected_items"`
}

// AllItemsResponseSyscollectorPorts defines model for AllItemsResponseSyscollectorPorts.
type AllItemsResponseSyscollectorPorts struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []SyscollectorPorts `json:"affected_items"`
}

// AllItemsResponseSyscollectorProcesses defines model for AllItemsResponseSyscollectorProcesses.
type AllItemsResponseSyscollectorProcesses struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []SyscollectorProcess `json:"affected_items"`
}

// AllItemsResponseSyscollectorProtocol defines model for AllItemsResponseSyscollectorProtocol.
type AllItemsResponseSyscollectorProtocol struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []SyscollectorProtocol `json:"affected_items"`
}

// AllItemsResponseUsers defines model for AllItemsResponseUsers.
type AllItemsResponseUsers struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []UsersResponse `json:"affected_items"`
}

// AllItemsResponseValidationStatus defines model for AllItemsResponseValidationStatus.
type AllItemsResponseValidationStatus struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []ValidationStatus `json:"affected_items"`
}

// AllItemsResponseWazuhLogs defines model for AllItemsResponseWazuhLogs.
type AllItemsResponseWazuhLogs struct {
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []WazuhLogs `json:"affected_items"`
}

// AllItemsResponseWazuhStats defines model for AllItemsResponseWazuhStats.
type AllItemsResponseWazuhStats struct {
	// Embedded fields due to inline allOf schema

	// Items that successfully applied the API call action
	AffectedItems []interface{} `json:"affected_items"`
	// Embedded struct due to allOf(#/components/schemas/AllItemsResponse)
	AllItemsResponse `yaml:",inline"`
}

// ApiError defines model for ApiError.
type ApiError struct {
	ApiCode        *int32               `json:"code,omitempty"`
	ApiDapiErrors  *ApiError_DapiErrors `json:"dapi_errors,omitempty"`
	ApiDetail      string               `json:"detail"`
	ApiInstance    *string              `json:"instance,omitempty"`
	ApiRemediation *string              `json:"remediation,omitempty"`
	ApiTitle       string               `json:"title"`
}

// ApiError_DapiErrors defines model for ApiError.DapiErrors.
type ApiError_DapiErrors struct {
	AdditionalProperties map[string]struct {
		Error   *string `json:"error,omitempty"`
		Logfile *string `json:"logfile,omitempty"`
	} `json:"-"`
}

// ApiResponse defines model for ApiResponse.
type ApiResponse struct {

	// Human readable description to explain the result of the request
	Message   *string `json:"message,omitempty"`
	ErrorCode int     `json:"error,omitempty"`
}

// BasicInfo defines model for BasicInfo.
type BasicInfo struct {

	// API version in the manager
	ApiVersion *string `json:"api_version,omitempty"`

	// Server hostname
	Hostname *string `json:"hostname,omitempty"`

	// API license name
	LicenseName *string `json:"license_name,omitempty"`

	// API license url
	LicenseUrl *string `json:"license_url,omitempty"`

	// API revision
	Revision  *int32  `json:"revision,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`

	// API title name
	Title *string `json:"title,omitempty"`
}

// CDBList defines model for CDBList.
type CDBList struct {
	// Embedded struct due to allOf(#/components/schemas/RulesetFile)
	RulesetFile `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Items *[]CDBListPair `json:"items,omitempty"`
}

// CDBListFile defines model for CDBListFile.
type CDBListFile RulesetFile

// CDBListPair defines model for CDBListPair.
type CDBListPair struct {

	// Value of the CDB list item key
	Key string `json:"key"`

	// Value of the CDB list item value
	Value string `json:"value"`
}

// CiscatResults defines model for CiscatResults.
type CiscatResults struct {

	// CIS-CAT benchmark where the profile is defined
	Benchmark *string `json:"benchmark,omitempty"`

	// Number of checks that CIS-CAT was not able to run
	Error *int32 `json:"error,omitempty"`

	// Number of failed checks. If this number is higher than 0 the host will probably have a vulnerability
	Fail *int32 `json:"fail,omitempty"`

	// Number of not passed checks
	Notchecked *int32 `json:"notchecked,omitempty"`

	// Number of passed checks
	Pass *int32 `json:"pass,omitempty"`

	// CIS-CAT profile scanned
	Profile *string     `json:"profile,omitempty"`
	Scan    *ScanIdTime `json:"scan,omitempty"`

	// Percentage of passed checks
	Score *int32 `json:"score,omitempty"`

	// Number of checks which status CIS-CAT was not able to determine
	Unknown *int32 `json:"unknown,omitempty"`
}

// ClusterNode defines model for ClusterNode.
type ClusterNode struct {
	// Embedded struct due to allOf(#/components/schemas/ClusterNodeBasic)
	ClusterNodeBasic `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Node ID
	Name *ClusterNodeName `json:"name,omitempty"`
}

// ClusterNodeBasic defines model for ClusterNodeBasic.
type ClusterNodeBasic struct {

	// IP the node is using to communicate with other nodes in the cluster
	Ip *string `json:"ip,omitempty"`

	// Node type
	Type *string `json:"type,omitempty"`

	// Wazuh version installed in the node
	Version *string `json:"version,omitempty"`
}

// ClusterNodeName defines model for ClusterNodeName.
type ClusterNodeName string

// ConfigurationValidation defines model for ConfigurationValidation.
type ConfigurationValidation struct {

	// Configuration status
	Status *string `json:"status,omitempty"`
}

// ConfirmationMessage defines model for ConfirmationMessage.
type ConfirmationMessage struct {

	// Confirmation message
	Message *string `json:"message,omitempty"`
}

// DHCPStatus defines model for DHCPStatus.
type DHCPStatus string

// List of DHCPStatus
const (
	DHCPStatus_BOOTP    DHCPStatus = "BOOTP"
	DHCPStatus_disabled DHCPStatus = "disabled"
	DHCPStatus_enabled  DHCPStatus = "enabled"
	DHCPStatus_unknown  DHCPStatus = "unknown"
)

// DaemonStatus defines model for DaemonStatus.
type DaemonStatus string

// List of DaemonStatus
const (
	DaemonStatus_running DaemonStatus = "running"
	DaemonStatus_stopped DaemonStatus = "stopped"
)

// Decoder defines model for Decoder.
type Decoder struct {
	// Embedded struct due to allOf(#/components/schemas/DecoderFile)
	DecoderFile `yaml:",inline"`
}

// DecoderFile defines model for DecoderFile.
type DecoderFile struct {
	// Embedded struct due to allOf(#/components/schemas/RulesetFile)
	RulesetFile `yaml:",inline"`
	// Embedded struct due to allOf(#/components/schemas/RulesetStatus)
	RulesetStatus `yaml:",inline"`
}

// ExtraAgentFields defines model for ExtraAgentFields.
type ExtraAgentFields struct {

	// MD5 checksum of the group configuration file (agent.conf)
	ConfigSum *string `json:"configSum,omitempty"`

	// Date when the agent was registered
	DateAdd *string `json:"dateAdd,omitempty"`

	// List of groups the agent belongs to
	Group *[]string `json:"group,omitempty"`

	// IP where the agent communicates with the manager. If the manager can't get this information, it will be the same as registerIP field
	Ip *string `json:"ip,omitempty"`

	// Date when the last keepalive was received from the agent
	LastKeepAlive *string `json:"lastKeepAlive,omitempty"`

	// Hostname of the manager where the agent is reporting to
	Manager *string `json:"manager,omitempty"`

	// MD5 checksum of all group shared files merged in a single one (merged.mg)
	MergedSum *string `json:"mergedSum,omitempty"`

	// Node ID where the agent is reporting to
	NodeName *string `json:"node_name,omitempty"`

	// Agent OS information
	Os *struct {
		Arch     *string `json:"arch,omitempty"`
		Codename *string `json:"codename,omitempty"`
		Major    *string `json:"major,omitempty"`
		Minor    *string `json:"minor,omitempty"`
		Name     *string `json:"name,omitempty"`
		Platform *string `json:"platform,omitempty"`
		Uname    *string `json:"uname,omitempty"`
		Version  *string `json:"version,omitempty"`
	} `json:"os,omitempty"`

	// IP used at agent registration process
	RegisterIP *string `json:"registerIP,omitempty"`

	// Agent status. It is calculated based on the last keepalive and the Wazuh version
	Status *AgentStatus `json:"status,omitempty"`
}

// GroupConfiguration defines model for GroupConfiguration.
type GroupConfiguration struct {

	// Group configuration. The fields on this object depend on the actual group configuration
	Config  map[string]interface{} `json:"config"`
	Filters struct {

		// The name of the agent where that configuration is being applied
		Name *string `json:"name,omitempty"`

		// OS family where the configuration is being applied
		Os *string `json:"os,omitempty"`

		// Profile name. Any agent configured to use the defined profile may use the block
		Profile *string `json:"profile,omitempty"`
	} `json:"filters"`
}

// GroupID defines model for GroupID.
type GroupID string

// GroupIDDELETE defines model for GroupID_DELETE.
type GroupIDDELETE string

// ItemAffected defines model for ItemAffected.
type ItemAffected struct {

	// Items that successfully applied the API call action
	AffectedItems []interface{} `json:"affected_items"`
}

// LastScan defines model for LastScan.
type LastScan struct {

	// Date when the latest scan finished. If it is in progress, or no scans have been run, null will be returned
	End *time.Time `json:"end"`

	// Date when the latest scan started. If no scans have been run, null will be returned
	Start *time.Time `json:"start"`
}

// LocalPortInfo defines model for LocalPortInfo.
type LocalPortInfo struct {

	// Bind IP
	Ip *string `json:"ip,omitempty"`

	// Port used
	Port *int32 `json:"port,omitempty"`
}

// LogSummary defines model for LogSummary.
type LogSummary struct {
	All      *int32 `json:"all,omitempty"`
	Critical *int32 `json:"critical,omitempty"`
	Debug    *int32 `json:"debug,omitempty"`
	Error    *int32 `json:"error,omitempty"`
	Info     *int32 `json:"info,omitempty"`
	Warning  *int32 `json:"warning,omitempty"`
}

// NetworkInterfaceReceivedPackets defines model for NetworkInterfaceReceivedPackets.
type NetworkInterfaceReceivedPackets struct {

	// Number of bytes in the network interface
	Bytes *int32 `json:"bytes,omitempty"`

	// Number of dropped packages in the network interface
	Dropped *int32 `json:"dropped,omitempty"`

	// Number of packages containing any error in the network interface
	Error *int32 `json:"error,omitempty"`

	// Number of packages in the network interface
	Packets *int32 `json:"packets,omitempty"`
}

// NetworkInterfaceSentPackets defines model for NetworkInterfaceSentPackets.
type NetworkInterfaceSentPackets struct {

	// Number of bytes in the network interface
	Bytes *int32 `json:"bytes,omitempty"`

	// Number of dropped packages in the network interface
	Dropped *int32 `json:"dropped,omitempty"`

	// Number of packages containing any error in the network interface
	Error *int32 `json:"error,omitempty"`

	// Number of packages in the network interface
	Packets *int32 `json:"packets,omitempty"`
}

// NodeHealthcheck defines model for NodeHealthcheck.
type NodeHealthcheck struct {
	Name *struct {
		Info *struct {
			Info *struct {
				// Embedded struct due to allOf(#/components/schemas/ClusterNodeBasic)
				ClusterNodeBasic `yaml:",inline"`
				// Embedded fields due to inline allOf schema

				// Number of agents currently reporting to that node
				TotalActiveAgents *int32 `json:"totalActiveAgents,omitempty"`
			} `json:"info,omitempty"`

			// Node ID
			Name *ClusterNodeName `json:"name,omitempty"`
		} `json:"info,omitempty"`
		Status *struct {
			LastKeepAlive       *string `json:"last_keep_alive,omitempty"`
			LastSyncAgentGroups *struct {
				DateEndMaster    *string `json:"date_end_master,omitempty"`
				DateStartMaster  *string `json:"date_start_master,omitempty"`
				TotalAgentgroups *int32  `json:"total_agentgroups,omitempty"`
			} `json:"last_sync_agent_groups,omitempty"`
			LastSyncAgentinfo *struct {
				DateEndMaster   *string `json:"date_end_master,omitempty"`
				DateStartMaster *string `json:"date_start_master,omitempty"`
				TotalAgentinfo  *int32  `json:"total_agentinfo,omitempty"`
			} `json:"last_sync_agentinfo,omitempty"`
			LastSyncIntegrity *struct {
				DateEndMaster   *string `json:"date_end_master,omitempty"`
				DateStartMaster *string `json:"date_start_master,omitempty"`
				TotalFiles      *struct {
					Extra      *int32 `json:"extra,omitempty"`
					ExtraValid *int32 `json:"extra_valid,omitempty"`
					Missing    *int32 `json:"missing,omitempty"`
					Shared     *int32 `json:"shared,omitempty"`
				} `json:"total_files,omitempty"`
			} `json:"last_sync_integrity,omitempty"`
			SyncAgentinfoFree  *bool `json:"sync_agentinfo_free,omitempty"`
			SyncExtravalidFree *bool `json:"sync_extravalid_free,omitempty"`
			SyncIntegrityFree  *bool `json:"sync_integrity_free,omitempty"`
		} `json:"status,omitempty"`
	} `json:"name,omitempty"`
}

// NodeID defines model for NodeID.
type NodeID string

// OverviewAgents defines model for OverviewAgents.
type OverviewAgents struct {

	// Recount of the number of Wazuh agents group by OS
	AgentOs []struct {
		Count *int32 `json:"count,omitempty"`
		Os    *struct {
			Name     *string `json:"name,omitempty"`
			Platform *string `json:"platform,omitempty"`
			Version  *string `json:"version,omitempty"`
		} `json:"os,omitempty"`
	} `json:"agent_os"`
	AgentStatus AgentsSummaryStatus `json:"agent_status"`

	// Recount of the number of Wazuh agents group by version
	AgentVersion []struct {
		Count   *int32  `json:"count,omitempty"`
		Version *string `json:"version,omitempty"`
	} `json:"agent_version"`

	// Recount of the number of Wazuh agents group by Wazuh groups
	Groups              []AgentGroupID `json:"groups"`
	LastRegisteredAgent []Agent        `json:"last_registered_agent"`

	// Active nodes in the cluster
	Nodes []struct {
		Count    *int32  `json:"count,omitempty"`
		NodeName *string `json:"node_name,omitempty"`
	} `json:"nodes"`
}

// PoliciesRequest defines model for PoliciesRequest.
type PoliciesRequest struct {

	// Policy name
	Name string `json:"name"`

	// New policy definition
	Policy struct {

		// Actions to perform
		Actions []string `json:"actions"`

		// Effect of the policy
		Effect string `json:"effect"`

		// Resources to apply the actions on
		Resources []string `json:"resources"`
	} `json:"policy"`
}

// PoliciesRequestNoRequired defines model for PoliciesRequest_no_required.
type PoliciesRequestNoRequired struct {

	// Policy name
	Name *string `json:"name,omitempty"`

	// New policy definition
	Policy *struct {

		// Actions to perform
		Actions []string `json:"actions"`

		// Effect of the policy
		Effect string `json:"effect"`

		// Resources to apply the actions on
		Resources []string `json:"resources"`
	} `json:"policy,omitempty"`
}

// PoliciesResponse defines model for PoliciesResponse.
type PoliciesResponse struct {

	// Policy id
	Id *int `json:"id,omitempty"`

	// Policy name
	Name *string `json:"name,omitempty"`

	// New policy definition
	Policy *struct {

		// Actions to perform
		Actions *[]string `json:"actions,omitempty"`

		// Effect of the policy
		Effect *string `json:"effect,omitempty"`

		// Resources to apply the actions on
		Resources *[]string `json:"resources,omitempty"`
	} `json:"policy,omitempty"`
}

// PolicyId defines model for Policy_id.
type PolicyId string

// PolicyIdDELETE defines model for Policy_id_DELETE.
type PolicyIdDELETE string

// RemotePortInfo defines model for RemotePortInfo.
type RemotePortInfo struct {

	// Bind IP
	Ip *string `json:"ip,omitempty"`

	// Port used
	Port *int32 `json:"port,omitempty"`
}

// RequestError defines model for RequestError.
type RequestError struct {
	RequestDetail string `json:"detail"`
	RequestError  *int32 `json:"error,omitempty"`
	RequestTitle  string `json:"title"`
}

// RolesRequest defines model for RolesRequest.
type RolesRequest struct {

	// Role name
	Name string `json:"name"`
}

// RolesRequestNoRequired defines model for RolesRequest_no_required.
type RolesRequestNoRequired struct {

	// Role name
	Name *string `json:"name,omitempty"`
}

// RolesResponse defines model for RolesResponse.
type RolesResponse struct {

	// Role id
	Id *int `json:"id,omitempty"`

	// Role name
	Name *string `json:"name,omitempty"`

	// Role rule
	Rule *map[string]interface{} `json:"rule,omitempty"`
}

// Rule defines model for Rule.
type Rule struct {
	// Embedded struct due to allOf(#/components/schemas/RuleFile)
	RuleFile `yaml:",inline"`
	// Embedded fields due to inline allOf schema

	// Rule description. This description is shown when an alert matching the rule is raised
	Description *string `json:"description,omitempty"`

	// Rule definition details
	Details *map[string]interface{} `json:"details,omitempty"`

	// GDPR checks the rule is checking
	Gdpr *[]string `json:"gdpr,omitempty"`

	// GPG13 checks the rule is checking
	Gpg13 *[]string `json:"gpg13,omitempty"`

	// Groups the rule belongs to
	Groups *[]string `json:"groups,omitempty"`

	// HIPAA checks the rule is checking
	Hipaa *[]string `json:"hipaa,omitempty"`

	// Rule ID
	Id *int32 `json:"id,omitempty"`

	// Rule level
	Level *int32 `json:"level,omitempty"`

	// NIST-800-53 checks the rule is checking
	Nist80053 *[]string `json:"nist-800-53,omitempty"`

	// PCI DSS checks the rule is checking
	Pci *[]string `json:"pci,omitempty"`

	// TSC checks the rule is checking
	Tsc *[]string `json:"tsc,omitempty"`
}

// RuleFile defines model for RuleFile.
type RuleFile struct {
	// Embedded struct due to allOf(#/components/schemas/RulesetFile)
	RulesetFile `yaml:",inline"`
	// Embedded struct due to allOf(#/components/schemas/RulesetStatus)
	RulesetStatus `yaml:",inline"`
}

// RulesetFile defines model for RulesetFile.
type RulesetFile struct {

	// Name of the file
	Filename *string `json:"filename,omitempty"`

	// Folder path where the file is located. This path is relative to the Wazuh installation path
	RelativeDirname *string `json:"relative_dirname,omitempty"`
}

// RulesetStatus defines model for RulesetStatus.
type RulesetStatus struct {

	// Whether the specified ruleset file is enabled or disabled in Wazuh manager configuration
	Status *string `json:"status,omitempty"`
}

// SCAChecks defines model for SCAChecks.
type SCAChecks struct {

	// Specify how rule results are aggregated in order to calculate the final value of a check
	Condition *string `json:"condition,omitempty"`

	// A description of what is being checked
	Description *string `json:"description,omitempty"`

	// Analyzed directories
	Directory *string `json:"directory,omitempty"`

	// Analyzed file path
	File *string `json:"file,omitempty"`

	// Policy check ID. A policy contains multiple checks
	Id *int32 `json:"id,omitempty"`

	// Scanned policy ID
	PolicyId *string `json:"policy_id,omitempty"`

	// Check whether a process is running or not. It's only returned when the checked process is running
	Process *string `json:"process,omitempty"`

	// Explain why this check is necessary
	Rationale *string `json:"rationale,omitempty"`

	// A link to a documentation page about the check
	References *string `json:"references,omitempty"`

	// Analyzed registry
	Registry *string `json:"registry,omitempty"`

	// Explain how to fix the check, this field is very useful in case the check failed
	Remediation *string `json:"remediation,omitempty"`

	// Check result
	Result *string `json:"result,omitempty"`

	// A brief description of what is being checked
	Title *string `json:"title,omitempty"`
}

// SCADatabase defines model for SCADatabase.
type SCADatabase struct {

	// Brief description of what the policy is checking
	Description *string `json:"description,omitempty"`

	// When the last scan finished
	EndScan *time.Time `json:"end_scan,omitempty"`

	// Number of failed checks. If this number is higher than 0 the host has a vulnerability
	Fail *int32 `json:"fail,omitempty"`

	// Policy name
	Name *string `json:"name,omitempty"`

	// Number of passed checks
	Pass *int32 `json:"pass,omitempty"`

	// Policy ID
	PolicyId *string `json:"policy_id,omitempty"`

	// A link to a documentation page about the policy
	References *string `json:"references,omitempty"`

	// Percentage of passed checks
	Score *int32 `json:"score,omitempty"`

	// When the last scan started
	StartScan *time.Time `json:"start_scan,omitempty"`
}

// ScanIdTime defines model for ScanIdTime.
type ScanIdTime struct {

	// Scan ID
	Id *int64 `json:"id,omitempty"`

	// Date when the scan was performed
	Time *time.Time `json:"time,omitempty"`
}

// SecurityConfiguration defines model for SecurityConfiguration.
type SecurityConfiguration struct {

	// Time in seconds until the token expires
	AuthTokenExpTimeout *int32 `json:"auth_token_exp_timeout,omitempty"`

	// RBAC mode (white/black)
	RbacMode *string `json:"rbac_mode,omitempty"`
}

// SecurityRulesRequest defines model for SecurityRulesRequest.
type SecurityRulesRequest struct {

	// Rule name
	Name string `json:"name"`

	// Rule body
	Rule map[string]interface{} `json:"rule"`
}

// SecurityRulesRequestNoRequired defines model for SecurityRulesRequest_no_required.
type SecurityRulesRequestNoRequired struct {

	// Rule name
	Name *string `json:"name,omitempty"`

	// Rule body
	Rule *map[string]interface{} `json:"rule,omitempty"`
}

// SecurityRuleId defines model for Security_rule_id.
type SecurityRuleId string

// SecurityRuleIdDELETE defines model for Security_rule_id_DELETE.
type SecurityRuleIdDELETE string

// SimpleApiError defines model for SimpleApiError.
type SimpleApiError struct {
	Error SimpleApiError_Error `json:"error"`
	Id    *[]interface{}       `json:"id,omitempty"`
}

// SimpleApiError_Error defines model for SimpleApiError.Error.
type SimpleApiError_Error struct {
	AdditionalProperties map[string]struct {
		Code        *int32  `json:"code,omitempty"`
		Message     *string `json:"message,omitempty"`
		Remediation *string `json:"remediation,omitempty"`
	} `json:"-"`
}

// SyscheckDatabase defines model for SyscheckDatabase.
type SyscheckDatabase struct {

	// Date when the alert was raised
	Date *time.Time `json:"date,omitempty"`

	// File name that raised the alert
	File *string `json:"file,omitempty"`

	// GID of the file. Only available in Linux agents
	Gid *string `json:"gid,omitempty"`

	// Group name. Only available in Linux agents
	Gname *string `json:"gname,omitempty"`

	// Inode of the file. Only available in Linux agents
	Inode *int32 `json:"inode,omitempty"`

	// MD5 checksum of the file
	Md5 *string `json:"md5,omitempty"`

	// Last modification date of the file
	Mtime *string `json:"mtime,omitempty"`

	// File permissions
	Perm *string `json:"perm,omitempty"`

	// SHA1 checksum of the file
	Sha1 *string `json:"sha1,omitempty"`

	// SHA256 checksum of the file
	Sha256 *string `json:"sha256,omitempty"`

	// File size in bytes
	Size *int64 `json:"size,omitempty"`

	// File type. Registry type only available in Windows agents
	Type *string `json:"type,omitempty"`

	// UID of the file
	Uid *string `json:"uid,omitempty"`

	// User name of the file
	Uname *string `json:"uname,omitempty"`
}

// SyscollectorHardware defines model for SyscollectorHardware.
type SyscollectorHardware struct {

	// Agent ID
	AgentId *AgentID `json:"agent_id,omitempty"`

	// Motherboard serial number. This value will be empty in virtual machines
	BoardSerial *string `json:"board_serial,omitempty"`
	Cpu         *struct {

		// Number of cores the CPU has
		Cores *int32 `json:"cores,omitempty"`

		// Mhz the CPU has
		Mhz *float32 `json:"mhz,omitempty"`

		// CPU name
		Name *string `json:"name,omitempty"`
	} `json:"cpu,omitempty"`
	Ram *struct {

		// Current free RAM memory
		Free *int32 `json:"free,omitempty"`

		// Total RAM memory
		Total *int32 `json:"total,omitempty"`

		// RAM memory currently used
		Usage *int32 `json:"usage,omitempty"`
	} `json:"ram,omitempty"`
	Scan *ScanIdTime `json:"scan,omitempty"`
}

// SyscollectorHotfix defines model for SyscollectorHotfix.
type SyscollectorHotfix struct {

	// Hotfixes for windows agents
	Hotfix *string     `json:"hotfix,omitempty"`
	Scan   *ScanIdTime `json:"scan,omitempty"`
}

// SyscollectorInterface defines model for SyscollectorInterface.
type SyscollectorInterface struct {

	// Agent ID
	AgentId *AgentID `json:"agent_id,omitempty"`

	// MAC Address of the network interface
	Mac *string `json:"mac,omitempty"`

	// Network interface's Maximum Transfer Unit
	Mtu *int32 `json:"mtu,omitempty"`

	// Network interface name
	Name *string `json:"name,omitempty"`

	// Information related to received packets in the network interface
	Rx   *NetworkInterfaceReceivedPackets `json:"rx,omitempty"`
	Scan *ScanIdTime                      `json:"scan,omitempty"`

	// Network interface state
	State *string `json:"state,omitempty"`

	// Information related to sent packets in the network interface
	Tx *NetworkInterfaceSentPackets `json:"tx,omitempty"`

	// Network interface type
	Type *string `json:"type,omitempty"`
}

// SyscollectorNetwork defines model for SyscollectorNetwork.
type SyscollectorNetwork struct {

	// IP address associated with the network interface
	Address *string `json:"address,omitempty"`

	// Agent ID
	AgentId *AgentID `json:"agent_id,omitempty"`

	// IP address associated with the broadcast
	Broadcast *string `json:"broadcast,omitempty"`

	// Network interface name
	Iface *string `json:"iface,omitempty"`

	// Netmask associated with the network interface
	Netmask *string `json:"netmask,omitempty"`

	// Protocol associated with the network interface
	Proto *string `json:"proto,omitempty"`

	// Scan ID
	ScanId *int64 `json:"scan_id,omitempty"`
}

// SyscollectorOS defines model for SyscollectorOS.
type SyscollectorOS struct {

	// Agent ID
	AgentId *AgentID `json:"agent_id,omitempty"`

	// OS architecture
	Architecture *string `json:"architecture,omitempty"`

	// Machine's hostname
	Hostname *string `json:"hostname,omitempty"`
	Os       *struct {

		// OS version codename
		Codename *string `json:"codename,omitempty"`

		// Major release version
		Major *string `json:"major,omitempty"`

		// Minor release version
		Minor *string `json:"minor,omitempty"`

		// OS name
		Name *string `json:"name,omitempty"`

		// OS platform name
		Platform *string `json:"platform,omitempty"`

		// Full version name
		Version *string `json:"version,omitempty"`
	} `json:"os,omitempty"`

	// Release name
	Release *string     `json:"release,omitempty"`
	Scan    *ScanIdTime `json:"scan,omitempty"`

	// System name
	Sysname *string `json:"sysname,omitempty"`

	// Release version
	Version *string `json:"version,omitempty"`
}

// SyscollectorPackages defines model for SyscollectorPackages.
type SyscollectorPackages struct {

	// Agent ID
	AgentId *AgentID `json:"agent_id,omitempty"`

	// Package architecture
	Architecture *string `json:"architecture,omitempty"`

	// Brief package description
	Description *string `json:"description,omitempty"`

	// Package format
	Format *string `json:"format,omitempty"`

	// Whether the package has multi architecture support
	Multiarch *string `json:"multiarch,omitempty"`

	// Package name
	Name *string `json:"name,omitempty"`

	// Package priority
	Priority *string     `json:"priority,omitempty"`
	Scan     *ScanIdTime `json:"scan,omitempty"`

	// Package section
	Section *string `json:"section,omitempty"`

	// Installed package size in bytes
	Size *int `json:"size,omitempty"`

	// Source section
	Source *string `json:"source,omitempty"`

	// Vendor name
	Vendor *string `json:"vendor,omitempty"`

	// Release version installed
	Version *string `json:"version,omitempty"`
}

// SyscollectorPorts defines model for SyscollectorPorts.
type SyscollectorPorts struct {

	// Agent ID
	AgentId *AgentID `json:"agent_id,omitempty"`

	// Port inode
	Inode *int64 `json:"inode,omitempty"`

	// Information regarding local opened port
	Local *LocalPortInfo `json:"local,omitempty"`

	// PID owner of the opened port
	Pid *int32 `json:"pid,omitempty"`

	// Name of the PID
	Process *string `json:"process,omitempty"`

	// Protocol used in the communication
	Protocol *string `json:"protocol,omitempty"`

	// Information regarding the remote port the machine is connected to
	Remote *RemotePortInfo `json:"remote,omitempty"`

	// Packets at the receiver queue
	RxQueue *int32      `json:"rx_queue,omitempty"`
	Scan    *ScanIdTime `json:"scan,omitempty"`

	// Communication status
	State *string `json:"state,omitempty"`

	// Packets pending to be transmitted
	TxQueue *int32 `json:"tx_queue,omitempty"`
}

// SyscollectorProcess defines model for SyscollectorProcess.
type SyscollectorProcess struct {

	// Agent ID
	AgentId *AgentID `json:"agent_id,omitempty"`

	// Process received arguments
	Argvs *string `json:"argvs,omitempty"`

	// Executed command
	Cmd *string `json:"cmd,omitempty"`

	// Effective group
	Egroup *string `json:"egroup,omitempty"`

	// Effective user
	Euser *string `json:"euser,omitempty"`

	// Filesystem group name
	Fgroup *string `json:"fgroup,omitempty"`

	// Process name
	Name *string `json:"name,omitempty"`

	// Nice value of the process
	Nice *int32 `json:"nice,omitempty"`

	// Number of light weight processes
	Nlwp *int32 `json:"nlwp,omitempty"`

	// Process group
	Pgrp *int32 `json:"pgrp,omitempty"`

	// Process PID
	Pid *string `json:"pid,omitempty"`

	// Process parent PID
	Ppid *int32 `json:"ppid,omitempty"`

	// Kernel scheduling priority
	Priority *int32 `json:"priority,omitempty"`

	// Processor number which is running the process
	Processor *int32 `json:"processor,omitempty"`

	// Process resident size in bytes
	Resident *int32 `json:"resident,omitempty"`

	// Real group
	Rgroup *string `json:"rgroup,omitempty"`

	// Real user
	Ruser *string     `json:"ruser,omitempty"`
	Scan  *ScanIdTime `json:"scan,omitempty"`

	// Process session
	Session *int32 `json:"session,omitempty"`

	// Saved-set group
	Sgroup *string `json:"sgroup,omitempty"`

	// Shared memory
	Share *int32 `json:"share,omitempty"`

	// Process size in bytes
	Size *int32 `json:"size,omitempty"`

	// Time when the process started
	StartTime *int64 `json:"start_time,omitempty"`

	// Process state
	State *string `json:"state,omitempty"`

	// Time spent executing system code
	Stime *int32 `json:"stime,omitempty"`

	// Saved-set user
	Suser *string `json:"suser,omitempty"`

	// Thread Group ID
	Tgid *int32 `json:"tgid,omitempty"`

	// Process TTY number
	Tty *int32 `json:"tty,omitempty"`

	// Time spent executing user code
	Utime *int32 `json:"utime,omitempty"`

	// Total VM size (KB)
	VmSize *int32 `json:"vm_size,omitempty"`
}

// SyscollectorProtocol defines model for SyscollectorProtocol.
type SyscollectorProtocol struct {

	// Agent ID
	AgentId *AgentID `json:"agent_id,omitempty"`

	// DHCP status
	Dhcp *DHCPStatus `json:"dhcp,omitempty"`

	// Gateway IP
	Gateway *string `json:"gateway,omitempty"`

	// Network interface name
	Iface *string `json:"iface,omitempty"`

	// Scan ID
	ScanId *int64 `json:"scan_id,omitempty"`

	// Protocol of the interface data
	Type *string `json:"type,omitempty"`
}

// Token defines model for Token.
type Token struct {

	// User's JWT token
	Token *string `json:"token,omitempty"`
}

// UserId defines model for User_id.
type UserId string

// UserIdDELETE defines model for User_id_DELETE.
type UserIdDELETE string

// UsersResponse defines model for UsersResponse.
type UsersResponse struct {

	// Flag to enable the user to log in using authorization context
	AllowRunAs *bool `json:"allow_run_as,omitempty"`

	// User's id
	Id *int `json:"id,omitempty"`

	// User's roles
	Roles    *[]interface{} `json:"roles,omitempty"`
	Username *string        `json:"username,omitempty"`
}

// ValidationStatus defines model for ValidationStatus.
type ValidationStatus struct {

	// Node name
	Name *string `json:"name,omitempty"`

	// Status value
	Status *string `json:"status,omitempty"`
}

// WazuhAnalysisdStats defines model for WazuhAnalysisdStats.
type WazuhAnalysisdStats struct {

	// Pending to write in disk alerts queue size
	AlertsQueueSize *float32 `json:"alerts_queue_size,omitempty"`

	// If an event matches a rule, an alert is raised. The alerts are pushed to a _pending to write in disk alerts_ queue. This variable shows usage of that queue
	AlertsQueueUsage *float32 `json:"alerts_queue_usage,omitempty"`

	// Total of alerts written in disk during the last 5 seconds
	AlertsWritten *float32 `json:"alerts_written,omitempty"`

	// _Events to write in the archives.log_ queue size
	ArchivesQueueSize *float32 `json:"archives_queue_size,omitempty"`

	// _Events to write in the archives.log_ queue usage
	ArchivesQueueUsage *float32 `json:"archives_queue_usage,omitempty"`

	// Non catalogued events queue size
	EventQueueSize *float32 `json:"event_queue_size,omitempty"`

	// Same as `syscheck_queue_usage` but for events not catalogued in any of the previously mentioned queues
	EventQueueUsage *float32 `json:"event_queue_usage,omitempty"`

	// Discarded events because they didn't match any rule in the ruleset
	EventsDropped *float32 `json:"events_dropped,omitempty"`

	// Same as `events_processed` but per second
	EventsEdps *float32 `json:"events_edps,omitempty"`

	// Total of events processed (i.e. matched against Wazuh ruleset) in the last 5 seconds
	EventsProcessed *float32 `json:"events_processed,omitempty"`

	// Events received in `analysisd` from the rest of modules in the last 5 seconds
	EventsReceived *float32 `json:"events_received,omitempty"`

	// _Events to write in the firewall log_ queue size
	FirewallQueueSize *float32 `json:"firewall_queue_size,omitempty"`

	// Percentage of use in the queue of events to write in the firewall log
	FirewallQueueUsage *float32 `json:"firewall_queue_usage,omitempty"`

	// Same as `alerts_written` but focusing in firewall alerts
	FirewallWritten *float32 `json:"firewall_written,omitempty"`

	// Same as `alerts_written` but focusing in [FTS alerts] (https://documentation.wazuh.com/4.0/user-manual/ruleset/ruleset-xml-syntax/decoders.html?highlight=fts #fts)
	FtsWritten *float32 `json:"fts_written,omitempty"`

	// Hostinfo events decoded per second
	HostinfoEdps *float32 `json:"hostinfo_edps,omitempty"`

	// Same as `total_events_decoded` but for hostinfo events
	HostinfoEventsDecoded *float32 `json:"hostinfo_events_decoded,omitempty"`

	// Hostinfo events queue size
	HostinfoQueueSize *float32 `json:"hostinfo_queue_size,omitempty"`

	// Same as `syscheck_queue_usage` but for hostinfo events
	HostinfoQueueUsage *float32 `json:"hostinfo_queue_usage,omitempty"`

	// Same as `total_events_decoded` but for non catalogued events
	OtherEventsDecoded *float32 `json:"other_events_decoded,omitempty"`

	// Non catalogued events decoded per second
	OtherEventsEdps *float32 `json:"other_events_edps,omitempty"`

	// Rootcheck events decoded per second
	RootcheckEdps *float32 `json:"rootcheck_edps,omitempty"`

	// Same as `total_events_decoded` but for rootcheck events
	RootcheckEventsDecoded *float32 `json:"rootcheck_events_decoded,omitempty"`

	// Rootcheck events queue size
	RootcheckQueueSize *float32 `json:"rootcheck_queue_size,omitempty"`

	// Same as `syscheck_queue_usage` but for rootcheck events
	RootcheckQueueUsage *float32 `json:"rootcheck_queue_usage,omitempty"`

	// Pending to process events queue size
	RuleMatchingQueueSize *float32 `json:"rule_matching_queue_size,omitempty"`

	// After decoding, events are pushed to a _pending to process_ queue which will match the events against the Wazuh ruleset to raise alerts. This variable shows usage of that queue
	RuleMatchingQueueUsage *float32 `json:"rule_matching_queue_usage,omitempty"`

	// Policy monitoring events decoded per second
	ScaEdps *float32 `json:"sca_edps,omitempty"`

	// Same as `total_events_decoded` but for policy monitoring events
	ScaEventsDecoded *float32 `json:"sca_events_decoded,omitempty"`

	// Policy monitoring events queue size
	ScaQueueSize *float32 `json:"sca_queue_size,omitempty"`

	// Same as `syscheck_queue_usage` but for policy monitoring events
	ScaQueueUsage *float32 `json:"sca_queue_usage,omitempty"`

	// Stats log queue size
	StatisticalQueueSize *float32 `json:"statistical_queue_size,omitempty"`

	// Stats log queue usage
	StatisticalQueueUsage *float32 `json:"statistical_queue_usage,omitempty"`

	// FIM events decoded per second (EDPS = Events Decoded Per Second)
	SyscheckEdps *float32 `json:"syscheck_edps,omitempty"`

	// Same as `total_events_decoded` but for FIM events
	SyscheckEventsDecoded *float32 `json:"syscheck_events_decoded,omitempty"`

	// Syscheck events queue size
	SyscheckQueueSize *float32 `json:"syscheck_queue_size,omitempty"`

	// Percentage of use in the syscheck events queue pending to be decoded. Events are discarded when the queue is full
	SyscheckQueueUsage *float32 `json:"syscheck_queue_usage,omitempty"`

	// System inventory events decoded per second
	SyscollectorEdps *float32 `json:"syscollector_edps,omitempty"`

	// Same as `total_events_decoded` but for system inventory events
	SyscollectorEventsDecoded *float32 `json:"syscollector_events_decoded,omitempty"`

	// System inventory events queue size
	SyscollectorQueueSize *float32 `json:"syscollector_queue_size,omitempty"`

	// Same as `syscheck_queue_usage` but for system inventory events
	SyscollectorQueueUsage *float32 `json:"syscollector_queue_usage,omitempty"`

	// Total events decoded in the last 5 seconds. This number is not accumulative, the number in the following 5 seconds can be lower than the previous one
	TotalEventsDecoded *float32 `json:"total_events_decoded,omitempty"`

	// Windows events decoded per second
	WinevtEdps *float32 `json:"winevt_edps,omitempty"`

	// Same as `total_events_decoded` but for Windows events
	WinevtEventsDecoded *float32 `json:"winevt_events_decoded,omitempty"`

	// Windows events queue size
	WinevtQueueSize *float32 `json:"winevt_queue_size,omitempty"`

	// Same as `syscheck_queue_usage` but for Windows events
	WinevtQueueUsage *float32 `json:"winevt_queue_usage,omitempty"`
}

// WazuhDaemonsStatus defines model for WazuhDaemonsStatus.
type WazuhDaemonsStatus struct {
	OssecAgentlessd   *DaemonStatus `json:"ossec-agentlessd,omitempty"`
	OssecAnalysisd    *DaemonStatus `json:"ossec-analysisd,omitempty"`
	OssecAuthd        *DaemonStatus `json:"ossec-authd,omitempty"`
	OssecCsyslogd     *DaemonStatus `json:"ossec-csyslogd,omitempty"`
	OssecDbd          *DaemonStatus `json:"ossec-dbd,omitempty"`
	OssecExecd        *DaemonStatus `json:"ossec-execd,omitempty"`
	OssecIntegratord  *DaemonStatus `json:"ossec-integratord,omitempty"`
	OssecLogcollector *DaemonStatus `json:"ossec-logcollector,omitempty"`
	OssecMaild        *DaemonStatus `json:"ossec-maild,omitempty"`
	OssecMonitord     *DaemonStatus `json:"ossec-monitord,omitempty"`
	OssecRemoted      *DaemonStatus `json:"ossec-remoted,omitempty"`
	OssecReportd      *DaemonStatus `json:"ossec-reportd,omitempty"`
	OssecSyscheckd    *DaemonStatus `json:"ossec-syscheckd,omitempty"`
	WazuhApid         *DaemonStatus `json:"wazuh-apid,omitempty"`
	WazuhClusterd     *DaemonStatus `json:"wazuh-clusterd,omitempty"`
	WazuhDb           *DaemonStatus `json:"wazuh-db,omitempty"`
	WazuhModulesd     *DaemonStatus `json:"wazuh-modulesd,omitempty"`
}

// WazuhHourlyStats defines model for WazuhHourlyStats.
type WazuhHourlyStats struct {

	// Array containing the number of alerts for every hour
	Averages     *[]int `json:"averages,omitempty"`
	Interactions *int32 `json:"interactions,omitempty"`
}

// WazuhInfo defines model for WazuhInfo.
type WazuhInfo struct {
	CompilationDate *time.Time `json:"compilation_date,omitempty"`

	// Maximum number of agents that can be registered. This variable is defined at compilation time
	MaxAgents      *string `json:"max_agents,omitempty"`
	OpensslSupport *string `json:"openssl_support,omitempty"`

	// Wazuh installation path
	Path           *string `json:"path,omitempty"`
	RulesetVersion *string `json:"ruleset_version,omitempty"`

	// Wazuh installation type
	Type     *string `json:"type,omitempty"`
	TzName   *string `json:"tz_name,omitempty"`
	TzOffset *string `json:"tz_offset,omitempty"`

	// Wazuh version
	Version *string `json:"version,omitempty"`
}

// WazuhLogs defines model for WazuhLogs.
type WazuhLogs struct {

	// Log message
	Description *string `json:"description,omitempty"`

	// Log level
	Level *string `json:"level,omitempty"`

	// Wazuh component that logged the event
	Tag       *string    `json:"tag,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
}

// WazuhLogsSummary defines model for WazuhLogsSummary.
type WazuhLogsSummary struct {
	OssecAgentlessd                    *LogSummary `json:"ossec-agentlessd,omitempty"`
	OssecAnalysisd                     *LogSummary `json:"ossec-analysisd,omitempty"`
	OssecAuthd                         *LogSummary `json:"ossec-authd,omitempty"`
	OssecCsyslogd                      *LogSummary `json:"ossec-csyslogd,omitempty"`
	OssecDbd                           *LogSummary `json:"ossec-dbd,omitempty"`
	OssecExecd                         *LogSummary `json:"ossec-execd,omitempty"`
	OssecIntegratord                   *LogSummary `json:"ossec-integratord,omitempty"`
	OssecLogcollector                  *LogSummary `json:"ossec-logcollector,omitempty"`
	OssecMaild                         *LogSummary `json:"ossec-maild,omitempty"`
	OssecMonitord                      *LogSummary `json:"ossec-monitord,omitempty"`
	OssecRemoted                       *LogSummary `json:"ossec-remoted,omitempty"`
	OssecReportd                       *LogSummary `json:"ossec-reportd,omitempty"`
	OssecRootcheck                     *LogSummary `json:"ossec-rootcheck,omitempty"`
	OssecSyscheckd                     *LogSummary `json:"ossec-syscheckd,omitempty"`
	OssecTestrule                      *LogSummary `json:"ossec-testrule,omitempty"`
	Sca                                *LogSummary `json:"sca,omitempty"`
	WazuhDb                            *LogSummary `json:"wazuh-db,omitempty"`
	WazuhModulesd                      *LogSummary `json:"wazuh-modulesd,omitempty"`
	WazuhModulesdAgentKeyPolling       *LogSummary `json:"wazuh-modulesd:agent-key-polling,omitempty"`
	WazuhModulesdAwsS3                 *LogSummary `json:"wazuh-modulesd:aws-s3,omitempty"`
	WazuhModulesdAzureLogs             *LogSummary `json:"wazuh-modulesd:azure-logs,omitempty"`
	WazuhModulesdCiscat                *LogSummary `json:"wazuh-modulesd:ciscat,omitempty"`
	WazuhModulesdCommand               *LogSummary `json:"wazuh-modulesd:command,omitempty"`
	WazuhModulesdDatabase              *LogSummary `json:"wazuh-modulesd:database,omitempty"`
	WazuhModulesdDockerListener        *LogSummary `json:"wazuh-modulesd:docker-listener,omitempty"`
	WazuhModulesdDownload              *LogSummary `json:"wazuh-modulesd:download,omitempty"`
	WazuhModulesdOscap                 *LogSummary `json:"wazuh-modulesd:oscap,omitempty"`
	WazuhModulesdOsquery               *LogSummary `json:"wazuh-modulesd:osquery,omitempty"`
	WazuhModulesdSyscollector          *LogSummary `json:"wazuh-modulesd:syscollector,omitempty"`
	WazuhModulesdVulnerabilityDetector *LogSummary `json:"wazuh-modulesd:vulnerability-detector,omitempty"`
}

// WazuhMangerConfiguration defines model for WazuhMangerConfiguration.
type WazuhMangerConfiguration struct {
	ActiveResponse  *[]map[string]interface{} `json:"active-response,omitempty"`
	AgentKeyPolling *map[string]interface{}   `json:"agent-key-polling,omitempty"`
	Agentless       *[]map[string]interface{} `json:"agentless,omitempty"`
	Alerts          *map[string]interface{}   `json:"alerts,omitempty"`
	Auth            *map[string]interface{}   `json:"auth,omitempty"`
	AwsS3           *map[string]interface{}   `json:"aws-s3,omitempty"`
	AzureLogs       *map[string]interface{}   `json:"azure-logs,omitempty"`
	CisCat          *map[string]interface{}   `json:"cis-cat,omitempty"`
	Cluster         *map[string]interface{}   `json:"cluster,omitempty"`
	Command         *[]map[string]interface{} `json:"command,omitempty"`
	DatabaseOutput  *map[string]interface{}   `json:"database_output,omitempty"`
	DockerListener  *map[string]interface{}   `json:"docker-listener,omitempty"`
	EmailAlerts     *map[string]interface{}   `json:"email_alerts,omitempty"`
	GcpPubsub       *map[string]interface{}   `json:"gcp-pubsub,omitempty"`
	Global          *map[string]interface{}   `json:"global,omitempty"`
	Integration     *[]map[string]interface{} `json:"integration,omitempty"`
	Labels          *map[string]interface{}   `json:"labels,omitempty"`
	Localfile       *[]map[string]interface{} `json:"localfile,omitempty"`
	Logging         *map[string]interface{}   `json:"logging,omitempty"`
	OpenScap        *map[string]interface{}   `json:"open-scap,omitempty"`
	Osquery         *map[string]interface{}   `json:"osquery,omitempty"`
	Remote          *[]map[string]interface{} `json:"remote,omitempty"`
	Reports         *map[string]interface{}   `json:"reports,omitempty"`
	Rootcheck       *map[string]interface{}   `json:"rootcheck,omitempty"`
	Ruleset         *map[string]interface{}   `json:"ruleset,omitempty"`
	Sca             *map[string]interface{}   `json:"sca,omitempty"`
	Socket          *map[string]interface{}   `json:"socket,omitempty"`
	Syscheck        *map[string]interface{}   `json:"syscheck,omitempty"`
	Syscollector    *map[string]interface{}   `json:"syscollector,omitempty"`
	SyslogOutput    *[]map[string]interface{} `json:"syslog_output,omitempty"`
}

// WazuhRemotedStats defines model for WazuhRemotedStats.
type WazuhRemotedStats struct {

	// Number of control messages received from all agents during the last five seconds
	CtrlMsgCount *float32 `json:"ctrl_msg_count,omitempty"`

	// Number of discarded events received from agents during the last five seconds
	DiscardedCount *float32 `json:"discarded_count,omitempty"`

	// Number of events sent to analysisd during the last five seconds
	EvtCount *float32 `json:"evt_count,omitempty"`

	// Number of messages sent to the agents during the last five seconds
	MsgSent *float32 `json:"msg_sent,omitempty"`

	// Usage of the queue to storage events from agents
	QueueSize *float32 `json:"queue_size,omitempty"`

	// Number of received bytes from all agents during the last five seconds
	RecvBytes *float32 `json:"recv_bytes,omitempty"`

	// Number of TCP active sessions during the last five seconds
	TcpSessions *float32 `json:"tcp_sessions,omitempty"`

	// Total queue size to store events from agents
	TotalQueueSize *float32 `json:"total_queue_size,omitempty"`
}

// WazuhStats defines model for WazuhStats.
type WazuhStats map[string]interface{}

// WazuhWeeklyStats defines model for WazuhWeeklyStats.
type WazuhWeeklyStats struct {
	Fri *WazuhHourlyStats `json:"Fri,omitempty"`
	Mon *WazuhHourlyStats `json:"Mon,omitempty"`
	Sat *WazuhHourlyStats `json:"Sat,omitempty"`
	Sun *WazuhHourlyStats `json:"Sun,omitempty"`
	Thu *WazuhHourlyStats `json:"Thu,omitempty"`
	Tue *WazuhHourlyStats `json:"Tue,omitempty"`
	Wed *WazuhHourlyStats `json:"Wed,omitempty"`
}

// Adapter defines model for adapter.
type Adapter string

// Address defines model for address.
type Address string

// AgentGroupID defines model for agent_group.
type AgentGroupID GroupID

// AgentId defines model for agent_id.
type AgentId AgentID

// AgentName defines model for agent_name.
type AgentName string

// AgentsList defines model for agents_list.
type AgentsList []AgentID

// AgentsListDelete defines model for agents_list_delete.
type AgentsListDelete []AgentIDDELETE

// Architecture defines model for architecture.
type Architecture string

// AttackId defines model for attack_id.
type AttackId string

// Benchmark defines model for benchmark.
type Benchmark string

// BoardSerial defines model for board_serial.
type BoardSerial string

// Broadcast defines model for broadcast.
type Broadcast string

// Command defines model for command.
type Command string

// Component defines model for component.
type Component string

// List of Component
const (
	Component_agent        Component = "agent"
	Component_agentless    Component = "agentless"
	Component_analysis     Component = "analysis"
	Component_auth         Component = "auth"
	Component_com          Component = "com"
	Component_csyslog      Component = "csyslog"
	Component_integrator   Component = "integrator"
	Component_logcollector Component = "logcollector"
	Component_mail         Component = "mail"
	Component_monitor      Component = "monitor"
	Component_request      Component = "request"
	Component_syscheck     Component = "syscheck"
	Component_wmodules     Component = "wmodules"
)

// Condition defines model for condition.
type Condition string

// Configuration defines model for configuration.
type Configuration string

// List of Configuration
const (
	Configuration_active_response  Configuration = "active_response"
	Configuration_active_response1 Configuration = "active-response"
	Configuration_agentless        Configuration = "agentless"
	Configuration_alerts           Configuration = "alerts"
	Configuration_auth             Configuration = "auth"
	Configuration_buffer           Configuration = "buffer"
	Configuration_client           Configuration = "client"
	Configuration_cluster          Configuration = "cluster"
	Configuration_command          Configuration = "command"
	Configuration_csyslog          Configuration = "csyslog"
	Configuration_decoders         Configuration = "decoders"
	Configuration_global           Configuration = "global"
	Configuration_integration      Configuration = "integration"
	Configuration_internal         Configuration = "internal"
	Configuration_labels           Configuration = "labels"
	Configuration_localfile        Configuration = "localfile"
	Configuration_logging          Configuration = "logging"
	Configuration_remote           Configuration = "remote"
	Configuration_reports          Configuration = "reports"
	Configuration_rootcheck        Configuration = "rootcheck"
	Configuration_rules            Configuration = "rules"
	Configuration_socket           Configuration = "socket"
	Configuration_syscheck         Configuration = "syscheck"
	Configuration_wmodules         Configuration = "wmodules"
)

// CpuCores defines model for cpu.cores.
type CpuCores int32

// CpuMhz defines model for cpu.mhz.
type CpuMhz float32

// CpuName defines model for cpu.name.
type CpuName string

// Date defines model for date.
type Date openapi_types.Date

// DecoderName defines model for decoder_name.
type DecoderName []string

// DeleteFilesPath defines model for delete_files_path.
type DeleteFilesPath string

// Description defines model for description.
type Description string

// Dhcp defines model for dhcp.
type Dhcp DHCPStatus

// Directory defines model for directory.
type Directory string

// Distinct defines model for distinct.
type Distinct bool

// DownloadFile defines model for downloadFile.
type DownloadFile string

// EditFilesPath defines model for edit_files_path.
type EditFilesPath string

// Egroup defines model for egroup.
type Egroup string

// Endpoint defines model for endpoint.
type Endpoint string

// Error defines model for error.
type Error int32

// Euser defines model for euser.
type Euser string

// Fail defines model for fail.
type Fail int32

// Fgroup defines model for fgroup.
type Fgroup string

// Field defines model for field.
type Field string

// Fields defines model for fields.
type Fields []string

// FileFormat defines model for file_format.
type FileFormat string

// FileName defines model for file_name.
type FileName string

// FilePath defines model for file_path.
type FilePath string

// Filename defines model for filename.
type Filename []string

// Filetype defines model for filetype.
type Filetype string

// List of Filetype
const (
	Filetype_file     Filetype = "file"
	Filetype_registry Filetype = "registry"
)

// Force defines model for force.
type Force bool

// ForceSingleGroup defines model for force_single_group.
type ForceSingleGroup bool

// FullPathFilter defines model for full_path_filter.
type FullPathFilter string

// Gateway defines model for gateway.
type Gateway string

// Gdpr defines model for gdpr.
type Gdpr string

// GetDirnamesPath defines model for get_dirnames_path.
type GetDirnamesPath string

// GetFilesPath defines model for get_files_path.
type GetFilesPath string

// Gpg13 defines model for gpg13.
type Gpg13 string

// Group defines model for group.
type Group string

// GroupId defines model for group_id.
type GroupId GroupID

// GroupIdQuery defines model for group_id_query.
type GroupIdQuery GroupID

// GroupsList defines model for groups_list.
type GroupsList []GroupID

// GroupsListDelete defines model for groups_list_delete.
type GroupsListDelete []GroupIDDELETE

// Hash defines model for hash.
type Hash string

// List of Hash
const (
	Hash_blake2b  Hash = "blake2b"
	Hash_blake2s  Hash = "blake2s"
	Hash_md5      Hash = "md5"
	Hash_sha1     Hash = "sha1"
	Hash_sha224   Hash = "sha224"
	Hash_sha256   Hash = "sha256"
	Hash_sha384   Hash = "sha384"
	Hash_sha3_224 Hash = "sha3_224"
	Hash_sha3_256 Hash = "sha3_256"
	Hash_sha3_384 Hash = "sha3_384"
	Hash_sha3_512 Hash = "sha3_512"
	Hash_sha512   Hash = "sha512"
)

// Hashfilter defines model for hashfilter.
type Hashfilter string

// Hipaa defines model for hipaa.
type Hipaa string

// Hotfix defines model for hotfix.
type Hotfix string

// Iface defines model for iface.
type Iface string

// Installer defines model for installer.
type Installer string

// Ip defines model for ip.
type Ip string

// Level defines model for level.
type Level string

// Limit defines model for limit.
type Limit int32

// LocalIp defines model for local.ip.
type LocalIp string

// LocalPort defines model for local.port.
type LocalPort string

// LogLevel defines model for log_level.
type LogLevel string

// List of LogLevel
const (
	LogLevel__error   LogLevel = "error"
	LogLevel_critical LogLevel = "critical"
	LogLevel_debug    LogLevel = "debug"
	LogLevel_debug2   LogLevel = "debug2"
	LogLevel_info     LogLevel = "info"
	LogLevel_warning  LogLevel = "warning"
)

// ManagerHost defines model for manager_host.
type ManagerHost string

// Md5 defines model for md5.
type Md5 string

// Mitre defines model for mitre.
type Mitre string

// Mtu defines model for mtu.
type Mtu int32

// Name defines model for name.
type Name string

// Netmask defines model for netmask.
type Netmask string

// Nist80053 defines model for nist-800-53.
type Nist80053 string

// Nlwp defines model for nlwp.
type Nlwp string

// NodeId defines model for node_id.
type NodeId string

// NodeName defines model for node_name.
type NodeName string

// NodeType defines model for node_type.
type NodeType string

// List of NodeType
const (
	NodeType_master NodeType = "master"
	NodeType_worker NodeType = "worker"
)

// NodesList defines model for nodes_list.
type NodesList []string

// Notchecked defines model for notchecked.
type Notchecked int32

// Offset defines model for offset.
type Offset int32

// OlderThanParam defines model for olderThanParam.
type OlderThanParam string

// OlderThan defines model for older_than.
type OlderThan string

// OsName defines model for os.name.
type OsName string

// OsPlatform defines model for os.platform.
type OsPlatform string

// OsVersion defines model for os.version.
type OsVersion string

// Overwrite defines model for overwrite.
type Overwrite bool

// PackageVersion defines model for package_version.
type PackageVersion string

// Pass defines model for pass.
type Pass int32

// PciDss defines model for pci_dss.
type PciDss string

// Pgrp defines model for pgrp.
type Pgrp string

// PhaseName defines model for phase_name.
type PhaseName string

// Pid defines model for pid.
type Pid string

// PlatformName defines model for platform_name.
type PlatformName string

// PolicyIdRbac defines model for policy_id_rbac.
type PolicyIdRbac PolicyId

// PolicyIdsRbac defines model for policy_ids_rbac.
type PolicyIdsRbac []PolicyId

// PolicyIdsRbacDelete defines model for policy_ids_rbac_delete.
type PolicyIdsRbacDelete []PolicyIdDELETE

// PolicyIdsRbacRequired defines model for policy_ids_rbac_required.
type PolicyIdsRbacRequired []PolicyId

// Ppid defines model for ppid.
type Ppid string

// Pretty defines model for pretty.
type Pretty bool

// Priority defines model for priority.
type Priority string

// Process defines model for process.
type Process string

// ProcessName defines model for process_name.
type ProcessName string

// ProcessPid defines model for process_pid.
type ProcessPid string

// ProcessState defines model for process_state.
type ProcessState string

// Profile defines model for profile.
type Profile string

// Proto defines model for proto.
type Proto string

// Protocol defines model for protocol.
type Protocol string

// Purge defines model for purge.
type Purge bool

// Query defines model for query.
type Query string

// RamFree defines model for ram.free.
type RamFree int64

// RamTotal defines model for ram.total.
type RamTotal int64

// Rationale defines model for rationale.
type Rationale string

// Raw defines model for raw.
type Raw bool

// Reason defines model for reason.
type Reason string

// References defines model for references.
type References string

// RegisterIP defines model for registerIP.
type RegisterIP string

// Registry defines model for registry.
type Registry string

// Release defines model for release.
type Release string

// Remediation defines model for remediation.
type Remediation string

// RemoteIp defines model for remote.ip.
type RemoteIp string

// ResourceList defines model for resource_list.
type ResourceList string

// List of ResourceList
const (
	ResourceList____          ResourceList = "*:*"
	ResourceList_agent_group  ResourceList = "agent:group"
	ResourceList_agent_id     ResourceList = "agent:id"
	ResourceList_decoder_file ResourceList = "decoder:file"
	ResourceList_file_path    ResourceList = "file:path"
	ResourceList_group_id     ResourceList = "group:id"
	ResourceList_list_path    ResourceList = "list:path"
	ResourceList_node_id      ResourceList = "node:id"
	ResourceList_policy_id    ResourceList = "policy:id"
	ResourceList_role_id      ResourceList = "role:id"
	ResourceList_rule_file    ResourceList = "rule:file"
	ResourceList_user_id      ResourceList = "user:id"
)

// Result defines model for result.
type Result string

// Rgroup defines model for rgroup.
type Rgroup string

// RoleId defines model for Role_id.
type RoleId string

// RoleIdDELETE defines model for Role_id_DELETE.
type RoleIdDELETE string

// RoleIds defines model for role_ids.
type RoleIds []RoleId

// RoleIdsDelete defines model for role_ids_delete.
type RoleIdsDelete []RoleIdDELETE

// RoleIdsRequired defines model for role_ids_required.
type RoleIdsRequired []RoleIdDELETE

// RuleIds defines model for rule_ids.
type RuleIds []int32

// RuleRequirement defines model for rule_requirement.
type RuleRequirement string

// List of RuleRequirement
const (
	RuleRequirement_gdpr        RuleRequirement = "gdpr"
	RuleRequirement_gpg13       RuleRequirement = "gpg13"
	RuleRequirement_hipaa       RuleRequirement = "hipaa"
	RuleRequirement_mitre       RuleRequirement = "mitre"
	RuleRequirement_nist_800_53 RuleRequirement = "nist-800-53"
	RuleRequirement_pci_dss     RuleRequirement = "pci_dss"
	RuleRequirement_tsc         RuleRequirement = "tsc"
)

// Ruser defines model for ruser.
type Ruser string

// RxBytes defines model for rx.bytes.
type RxBytes int32

// RxDropped defines model for rx.dropped.
type RxDropped int32

// RxErrors defines model for rx.errors.
type RxErrors int32

// RxPackets defines model for rx.packets.
type RxPackets int32

// ScaName defines model for sca_name.
type ScaName string

// Score defines model for score.
type Score int32

// Search defines model for search.
type Search string

// Section defines model for section.
type Section string

// List of Section
const (
	Section_active_response        Section = "active-response"
	Section_agent_key_polling      Section = "agent-key-polling"
	Section_agentless              Section = "agentless"
	Section_alerts                 Section = "alerts"
	Section_auth                   Section = "auth"
	Section_aws_s3                 Section = "aws-s3"
	Section_azure_logs             Section = "azure-logs"
	Section_cis_cat                Section = "cis-cat"
	Section_client                 Section = "client"
	Section_client_buffer          Section = "client_buffer"
	Section_cluster                Section = "cluster"
	Section_command                Section = "command"
	Section_database_output        Section = "database_output"
	Section_docker_listener        Section = "docker-listener"
	Section_email_alerts           Section = "email_alerts"
	Section_global                 Section = "global"
	Section_integration            Section = "integration"
	Section_labels                 Section = "labels"
	Section_localfile              Section = "localfile"
	Section_logging                Section = "logging"
	Section_open_scap              Section = "open-scap"
	Section_osquery                Section = "osquery"
	Section_remote                 Section = "remote"
	Section_reports                Section = "reports"
	Section_rootcheck              Section = "rootcheck"
	Section_ruleset                Section = "ruleset"
	Section_sca                    Section = "sca"
	Section_socket                 Section = "socket"
	Section_syscheck               Section = "syscheck"
	Section_syscollector           Section = "syscollector"
	Section_syslog_output          Section = "syslog_output"
	Section_vulnerability_detector Section = "vulnerability-detector"
)

// SecurityPosition defines model for security_position.
type SecurityPosition int

// SecurityRuleIds defines model for security_rule_ids.
type SecurityRuleIds []SecurityRuleId

// SecurityRuleIdsDelete defines model for security_rule_ids_delete.
type SecurityRuleIdsDelete []SecurityRuleIdDELETE

// SecurityRuleIdsRequired defines model for security_rule_ids_required.
type SecurityRuleIdsRequired []SecurityRuleId

// Select defines model for select.
type Select []string

// Sgroup defines model for sgroup.
type Sgroup string

// Sha1 defines model for sha1.
type Sha1 string

// Sha256 defines model for sha256.
type Sha256 string

// Sort defines model for sort.
type Sort string

// State defines model for state.
type State string

// Status defines model for status.
type Status string

// StatusAgentParam defines model for statusAgentParam.
type StatusAgentParam []string

// StatusRLDParam defines model for statusRLDParam.
type StatusRLDParam string

// List of StatusRLDParam
const (
	StatusRLDParam_all      StatusRLDParam = "all"
	StatusRLDParam_disabled StatusRLDParam = "disabled"
	StatusRLDParam_enabled  StatusRLDParam = "enabled"
)

// Summary defines model for summary.
type Summary bool

// Suser defines model for suser.
type Suser string

// Tag defines model for tag.
type Tag string

// List of Tag
const (
	Tag_ossec_agentlessd                      Tag = "ossec-agentlessd"
	Tag_ossec_analysisd                       Tag = "ossec-analysisd"
	Tag_ossec_authd                           Tag = "ossec-authd"
	Tag_ossec_csyslogd                        Tag = "ossec-csyslogd"
	Tag_ossec_dbd                             Tag = "ossec-dbd"
	Tag_ossec_execd                           Tag = "ossec-execd"
	Tag_ossec_integratord                     Tag = "ossec-integratord"
	Tag_ossec_logcollector                    Tag = "ossec-logcollector"
	Tag_ossec_maild                           Tag = "ossec-maild"
	Tag_ossec_monitord                        Tag = "ossec-monitord"
	Tag_ossec_remoted                         Tag = "ossec-remoted"
	Tag_ossec_reportd                         Tag = "ossec-reportd"
	Tag_ossec_rootcheck                       Tag = "ossec-rootcheck"
	Tag_ossec_syscheckd                       Tag = "ossec-syscheckd"
	Tag_ossec_testrule                        Tag = "ossec-testrule"
	Tag_sca                                   Tag = "sca"
	Tag_wazuh_db                              Tag = "wazuh-db"
	Tag_wazuh_modulesd                        Tag = "wazuh-modulesd"
	Tag_wazuh_modulesd_agent_key_polling      Tag = "wazuh-modulesd:agent-key-polling"
	Tag_wazuh_modulesd_aws_s3                 Tag = "wazuh-modulesd:aws-s3"
	Tag_wazuh_modulesd_azure_logs             Tag = "wazuh-modulesd:azure-logs"
	Tag_wazuh_modulesd_ciscat                 Tag = "wazuh-modulesd:ciscat"
	Tag_wazuh_modulesd_command                Tag = "wazuh-modulesd:command"
	Tag_wazuh_modulesd_control                Tag = "wazuh-modulesd:control"
	Tag_wazuh_modulesd_database               Tag = "wazuh-modulesd:database"
	Tag_wazuh_modulesd_docker_listener        Tag = "wazuh-modulesd:docker-listener"
	Tag_wazuh_modulesd_download               Tag = "wazuh-modulesd:download"
	Tag_wazuh_modulesd_oscap                  Tag = "wazuh-modulesd:oscap"
	Tag_wazuh_modulesd_osquery                Tag = "wazuh-modulesd:osquery"
	Tag_wazuh_modulesd_syscollector           Tag = "wazuh-modulesd:syscollector"
	Tag_wazuh_modulesd_vulnerability_detector Tag = "wazuh-modulesd:vulnerability-detector"
)

// Title defines model for title.
type Title string

// Tsc defines model for tsc.
type Tsc string

// TxBytes defines model for tx.bytes.
type TxBytes int32

// TxDropped defines model for tx.dropped.
type TxDropped int32

// TxErrors defines model for tx.errors.
type TxErrors int32

// TxPackets defines model for tx.packets.
type TxPackets int32

// TxQueue defines model for tx_queue.
type TxQueue string

// TypeAgents defines model for type_agents.
type TypeAgents []string

// TypeSyscollector defines model for type_syscollector.
type TypeSyscollector string

// Typesys defines model for typesys.
type Typesys string

// Unknown defines model for unknown.
type Unknown int32

// UpgradeVersion defines model for upgrade_version.
type UpgradeVersion string

// UseHttp defines model for use_http.
type UseHttp bool

// UserIdRequired defines model for user_id_required.
type UserIdRequired UserId

// UserIds defines model for user_ids.
type UserIds []UserId

// UserIdsDelete defines model for user_ids_delete.
type UserIdsDelete []UserIdDELETE

// Vendor defines model for vendor.
type Vendor string

// Version defines model for version.
type Version string

// WaitForComplete defines model for wait_for_complete.
type WaitForComplete bool

// WpkRepo defines model for wpk_repo.
type WpkRepo string

// InvalidCredentialsResponse defines model for InvalidCredentialsResponse.
type InvalidCredentialsResponse RequestError

// InvalidHTTPMethodResponse defines model for InvalidHTTPMethodResponse.
type InvalidHTTPMethodResponse RequestError

// PermissionDeniedResponse defines model for PermissionDeniedResponse.
type PermissionDeniedResponse ApiError

// RequestTooLargeResponse defines model for RequestTooLargeResponse.
type RequestTooLargeResponse RequestError

// ResourceNotFoundResponse defines model for ResourceNotFoundResponse.
type ResourceNotFoundResponse ApiError

// ResponseError defines model for ResponseError.
type ResponseError RequestError

// TooManyRequestsResponse defines model for TooManyRequestsResponse.
type TooManyRequestsResponse RequestError

// UnauthorizedResponse defines model for UnauthorizedResponse.
type UnauthorizedResponse RequestError

// WrongContentTypeResponse defines model for WrongContentTypeResponse.
type WrongContentTypeResponse RequestError

// DefaultControllerDefaultInfoParams defines parameters for DefaultControllerDefaultInfo.
type DefaultControllerDefaultInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`
}

// ActiveResponseControllerRunCommandJSONBody defines parameters for ActiveResponseControllerRunCommand.
type ActiveResponseControllerRunCommandJSONBody ActiveResponseBody

// ActiveResponseControllerRunCommandParams defines parameters for ActiveResponseControllerRunCommand.
type ActiveResponseControllerRunCommandParams struct {

	// List of agent IDs (separated by comma), all agents selected by default if not specified
	AgentsList *AgentsList `json:"agents_list,omitempty"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// AgentsControllerDeleteAgentsParams defines parameters for AgentsControllerDeleteAgents.
type AgentsControllerDeleteAgentsParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of agent IDs (separated by comma), use the keyword `all` to select all agents
	AgentsList AgentsListDelete `json:"agents_list"`

	// Permanently delete an agent from the key store
	Purge *Purge `json:"purge,omitempty"`

	// Filter by agent status (use commas to enter multiple statuses)
	Status *StatusAgentParam `json:"status,omitempty"`

	// Consider only agents whose last keep alive is older than the specified time frame. For never_connected agents, register date is considered instead of last keep alive. For example, `7d`, `10s` and `10` are valid values. When no time unit is specified, seconds are assumed. Use 0s to select all agents
	OlderThan *OlderThan `json:"older_than,omitempty"`
}

// AgentsControllerGetAgentsParams defines parameters for AgentsControllerGetAgents.
type AgentsControllerGetAgentsParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of agent IDs (separated by comma), all agents selected by default if not specified
	AgentsList *AgentsList `json:"agents_list,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Filter by agent status (use commas to enter multiple statuses)
	Status *StatusAgentParam `json:"status,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`

	// Filter out agents whose time lapse from last keep alive signal is longer than specified. Time in seconds, ‘[n_days]d’, ‘[n_hours]h’, ‘[n_minutes]m’ or ‘[n_seconds]s’. For never_connected agents, uses the register date. For example, `7d`, `10s` and `10` are valid values. If no time unit is specified, seconds are used
	OlderThan *OlderThanParam `json:"older_than,omitempty"`

	// Filter by OS platform
	OsPlatform *OsPlatform `json:"os.platform,omitempty"`

	// Filter by OS version
	OsVersion *OsVersion `json:"os.version,omitempty"`

	// Filter by OS name
	OsName *OsName `json:"os.name,omitempty"`

	// Filter by manager hostname where agents are connected to
	Manager *ManagerHost `json:"manager,omitempty"`

	// Filter by agents version
	Version *Version `json:"version,omitempty"`

	// Filter by group of agents
	Group *AgentGroupID `json:"group,omitempty"`

	// Filter by node name
	NodeName *NodeName `json:"node_name,omitempty"`

	// Filter by agent name
	Name *Name `json:"name,omitempty"`

	// Filter by the IP used by the agent to communicate with the manager. If it's not available, it will have the same value as registerIP
	Ip *Ip `json:"ip,omitempty"`

	// Filter by the IP used when registering the agent
	RegisterIP *RegisterIP `json:"registerIP,omitempty"`
}

// AgentsControllerAddAgentJSONBody defines parameters for AgentsControllerAddAgent.
type AgentsControllerAddAgentJSONBody struct {

	// Remove the old agent with the same IP if disconnected since <force_time> seconds
	ForceTime *int32 `json:"force_time,omitempty"`

	// If this is not included, the API will get the IP automatically. If you are behind a proxy, you must set the option behind_proxy_server to yes at api.yaml and make sure the proxy is setting HTTP header 'X-Forwarded-For' with origin IP address. Allowed values: IP, IP/NET, ANY
	Ip *string `json:"ip,omitempty"`

	// Agent name
	Name string `json:"name"`
}

// AgentsControllerAddAgentParams defines parameters for AgentsControllerAddAgent.
type AgentsControllerAddAgentParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// AgentsControllerDeleteMultipleAgentSingleGroupParams defines parameters for AgentsControllerDeleteMultipleAgentSingleGroup.
type AgentsControllerDeleteMultipleAgentSingleGroupParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of agent IDs (separated by comma), use the keyword `all` to select all agents
	AgentsList AgentsListDelete `json:"agents_list"`

	// Group ID. (Name of the group)
	GroupId GroupIdQuery `json:"group_id"`
}

// AgentsControllerPutMultipleAgentSingleGroupParams defines parameters for AgentsControllerPutMultipleAgentSingleGroup.
type AgentsControllerPutMultipleAgentSingleGroupParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of agent IDs (separated by comma), all agents selected by default if not specified
	AgentsList *AgentsList `json:"agents_list,omitempty"`

	// Group ID. (Name of the group)
	GroupId GroupIdQuery `json:"group_id"`

	// Whether to append the new group to current agent's multigroup or replace it
	ForceSingleGroup *ForceSingleGroup `json:"force_single_group,omitempty"`
}

// AgentsControllerRestartAgentsByGroupParams defines parameters for AgentsControllerRestartAgentsByGroup.
type AgentsControllerRestartAgentsByGroupParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// AgentsControllerInsertAgentJSONBody defines parameters for AgentsControllerInsertAgent.
type AgentsControllerInsertAgentJSONBody struct {

	// Remove the old agent with the same IP if disconnected for <force_time> seconds
	ForceTime *int32 `json:"force_time,omitempty"`

	// Agent ID
	Id *AgentID `json:"id,omitempty"`

	// If this is not included, the API will get the IP automatically. If you are behind a proxy, you must set the option behind_proxy_server to yes at api.yaml and make sure the proxy is setting HTTP header 'X-Forwarded-For' with origin IP address. Allowed values: IP, IP/NET, ANY
	Ip *string `json:"ip,omitempty"`

	// Key to use when communicating with the manager. The agent must have the same key on its `client.keys` file
	Key *string `json:"key,omitempty"`

	// Agent name
	Name string `json:"name"`
}

// AgentsControllerInsertAgentParams defines parameters for AgentsControllerInsertAgent.
type AgentsControllerInsertAgentParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// AgentsControllerPostNewAgentParams defines parameters for AgentsControllerPostNewAgent.
type AgentsControllerPostNewAgentParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Agent name
	AgentName AgentName `json:"agent_name"`
}

// AgentsControllerGetAgentNoGroupParams defines parameters for AgentsControllerGetAgentNoGroup.
type AgentsControllerGetAgentNoGroupParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`
}

// AgentsControllerRestartAgentsByNodeParams defines parameters for AgentsControllerRestartAgentsByNode.
type AgentsControllerRestartAgentsByNodeParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// AgentsControllerGetAgentOutdatedParams defines parameters for AgentsControllerGetAgentOutdated.
type AgentsControllerGetAgentOutdatedParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`
}

// AgentsControllerRestartAgentsParams defines parameters for AgentsControllerRestartAgents.
type AgentsControllerRestartAgentsParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of agent IDs (separated by comma), all agents selected by default if not specified
	AgentsList *AgentsList `json:"agents_list,omitempty"`
}

// AgentsControllerGetAgentFieldsParams defines parameters for AgentsControllerGetAgentFields.
type AgentsControllerGetAgentFieldsParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of fields affecting the operation
	Fields *Fields `json:"fields,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`
}

// AgentsControllerGetAgentSummaryOsParams defines parameters for AgentsControllerGetAgentSummaryOs.
type AgentsControllerGetAgentSummaryOsParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// AgentsControllerGetAgentSummaryStatusParams defines parameters for AgentsControllerGetAgentSummaryStatus.
type AgentsControllerGetAgentSummaryStatusParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// AgentsControllerGetAgentConfigParams defines parameters for AgentsControllerGetAgentConfig.
type AgentsControllerGetAgentConfigParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// AgentsControllerDeleteSingleAgentMultipleGroupsParams defines parameters for AgentsControllerDeleteSingleAgentMultipleGroups.
type AgentsControllerDeleteSingleAgentMultipleGroupsParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of group IDs (separated by comma), all groups selected by default if not specified
	GroupsList *GroupsList `json:"groups_list,omitempty"`
}

// AgentsControllerGetSyncAgentParams defines parameters for AgentsControllerGetSyncAgent.
type AgentsControllerGetSyncAgentParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// AgentsControllerDeleteSingleAgentSingleGroupParams defines parameters for AgentsControllerDeleteSingleAgentSingleGroup.
type AgentsControllerDeleteSingleAgentSingleGroupParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// AgentsControllerPutAgentSingleGroupParams defines parameters for AgentsControllerPutAgentSingleGroup.
type AgentsControllerPutAgentSingleGroupParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Whether to append the new group to current agent's multigroup or replace it
	ForceSingleGroup *ForceSingleGroup `json:"force_single_group,omitempty"`
}

// AgentsControllerGetAgentKeyParams defines parameters for AgentsControllerGetAgentKey.
type AgentsControllerGetAgentKeyParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// AgentsControllerRestartAgentParams defines parameters for AgentsControllerRestartAgent.
type AgentsControllerRestartAgentParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// AgentsControllerPutUpgradeAgentParams defines parameters for AgentsControllerPutUpgradeAgent.
type AgentsControllerPutUpgradeAgentParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// WPK repository
	WpkRepo *WpkRepo `json:"wpk_repo,omitempty"`

	// Wazuh version to upgrade to
	Version *UpgradeVersion `json:"version,omitempty"`

	// Use http protocol. If it's false use https. By default the value is set to false
	UseHttp *UseHttp `json:"use_http,omitempty"`

	// Force upgrade
	Force *Force `json:"force,omitempty"`
}

// AgentsControllerPutUpgradeCustomAgentParams defines parameters for AgentsControllerPutUpgradeCustomAgent.
type AgentsControllerPutUpgradeCustomAgentParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Full path to the WPK file. The file must be on a folder on the Wazuh's installation directory (by default, <code>/var/ossec</code>)
	FilePath FilePath `json:"file_path"`

	// Installation script. Default is <code>upgrade.sh</code> or <code>upgrade.bat</code> for windows agents
	Installer *Installer `json:"installer,omitempty"`
}

// AgentsControllerGetAgentUpgradeParams defines parameters for AgentsControllerGetAgentUpgrade.
type AgentsControllerGetAgentUpgradeParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Seconds to wait for the agent to respond
	Timeout *int32 `json:"timeout,omitempty"`
}

// CiscatControllerGetAgentsCiscatResultsParams defines parameters for CiscatControllerGetAgentsCiscatResults.
type CiscatControllerGetAgentsCiscatResultsParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by benchmark type
	Benchmark *Benchmark `json:"benchmark,omitempty"`

	// Filter by evaluated profile
	Profile *Profile `json:"profile,omitempty"`

	// Filter by passed checks
	Pass *Pass `json:"pass,omitempty"`

	// Filter by failed checks
	Fail *Fail `json:"fail,omitempty"`

	// Filter by encountered errors
	Error *Error `json:"error,omitempty"`

	// Filter by not checked
	Notchecked *Notchecked `json:"notchecked,omitempty"`

	// Filter by unknown results
	Unknown *Unknown `json:"unknown,omitempty"`

	// Filter by final score
	Score *Score `json:"score,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`
}

// ClusterControllerGetApiConfigParams defines parameters for ClusterControllerGetApiConfig.
type ClusterControllerGetApiConfigParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of node IDs (separated by comma), all nodes selected by default if not specified
	NodesList *NodesList `json:"nodes_list,omitempty"`
}

// ClusterControllerGetConfValidationParams defines parameters for ClusterControllerGetConfValidation.
type ClusterControllerGetConfValidationParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of node IDs (separated by comma), all nodes selected by default if not specified
	NodesList *NodesList `json:"nodes_list,omitempty"`
}

// ClusterControllerGetHealthcheckParams defines parameters for ClusterControllerGetHealthcheck.
type ClusterControllerGetHealthcheckParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of node IDs (separated by comma), all nodes selected by default if not specified
	NodesList *NodesList `json:"nodes_list,omitempty"`
}

// ClusterControllerGetConfigParams defines parameters for ClusterControllerGetConfig.
type ClusterControllerGetConfigParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ClusterControllerGetClusterNodeParams defines parameters for ClusterControllerGetClusterNode.
type ClusterControllerGetClusterNodeParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ClusterControllerGetClusterNodesParams defines parameters for ClusterControllerGetClusterNodes.
type ClusterControllerGetClusterNodesParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by node type
	Type *NodeType `json:"type,omitempty"`

	// List of node IDs (separated by comma), all nodes selected by default if not specified
	NodesList *NodesList `json:"nodes_list,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`
}

// ClusterControllerPutRestartParams defines parameters for ClusterControllerPutRestart.
type ClusterControllerPutRestartParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of node IDs (separated by comma), all nodes selected by default if not specified
	NodesList *NodesList `json:"nodes_list,omitempty"`
}

// ClusterControllerGetStatusParams defines parameters for ClusterControllerGetStatus.
type ClusterControllerGetStatusParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ClusterControllerGetConfigurationNodeParams defines parameters for ClusterControllerGetConfigurationNode.
type ClusterControllerGetConfigurationNodeParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Indicates the wazuh configuration section
	Section *Section `json:"section,omitempty"`

	// Indicate a section child. E.g, fields for *ruleset* section are: decoder_dir, rule_dir, etc
	Field *Field `json:"field,omitempty"`
}

// ClusterControllerGetNodeConfigParams defines parameters for ClusterControllerGetNodeConfig.
type ClusterControllerGetNodeConfigParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ClusterControllerDeleteFilesNodeParams defines parameters for ClusterControllerDeleteFilesNode.
type ClusterControllerDeleteFilesNodeParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Filepath to delete file. (Relative to wazuh installation folder)
	Path DeleteFilesPath `json:"path"`
}

// ClusterControllerGetFilesNodeParams defines parameters for ClusterControllerGetFilesNode.
type ClusterControllerGetFilesNodeParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Filepath to return file. (Relative to wazuh installation folder)
	Path GetFilesPath `json:"path"`
}

// ClusterControllerPutFilesNodeParams defines parameters for ClusterControllerPutFilesNode.
type ClusterControllerPutFilesNodeParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Filepath to upload/edit file. (Relative to wazuh installation folder)
	Path EditFilesPath `json:"path"`

	// If set to false, an exception will be raised when updating contents of an already existing filename
	Overwrite *Overwrite `json:"overwrite,omitempty"`
}

// ClusterControllerGetInfoNodeParams defines parameters for ClusterControllerGetInfoNode.
type ClusterControllerGetInfoNodeParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ClusterControllerGetLogNodeParams defines parameters for ClusterControllerGetLogNode.
type ClusterControllerGetLogNodeParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Wazuh component that logged the event
	Tag *Tag `json:"tag,omitempty"`

	// Filter by log level
	Level *LogLevel `json:"level,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`
}

// ClusterControllerGetLogSummaryNodeParams defines parameters for ClusterControllerGetLogSummaryNode.
type ClusterControllerGetLogSummaryNodeParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ClusterControllerGetStatsNodeParams defines parameters for ClusterControllerGetStatsNode.
type ClusterControllerGetStatsNodeParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Date to obtain statistical information from. Format YYYY-MM-DD
	Date *Date `json:"date,omitempty"`
}

// ClusterControllerGetStatsAnalysisdNodeParams defines parameters for ClusterControllerGetStatsAnalysisdNode.
type ClusterControllerGetStatsAnalysisdNodeParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ClusterControllerGetStatsHourlyNodeParams defines parameters for ClusterControllerGetStatsHourlyNode.
type ClusterControllerGetStatsHourlyNodeParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ClusterControllerGetStatsRemotedNodeParams defines parameters for ClusterControllerGetStatsRemotedNode.
type ClusterControllerGetStatsRemotedNodeParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ClusterControllerGetStatsWeeklyNodeParams defines parameters for ClusterControllerGetStatsWeeklyNode.
type ClusterControllerGetStatsWeeklyNodeParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ClusterControllerGetStatusNodeParams defines parameters for ClusterControllerGetStatusNode.
type ClusterControllerGetStatusNodeParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// DecodersControllerGetDecodersParams defines parameters for DecodersControllerGetDecoders.
type DecodersControllerGetDecodersParams struct {

	// Decoder name
	DecoderNames *DecoderName `json:"decoder_names,omitempty"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`

	// Filter by filename
	Filename *Filename `json:"filename,omitempty"`

	// Filter by relative directory name
	RelativeDirname *GetDirnamesPath `json:"relative_dirname,omitempty"`

	// Filter by list status. Use commas to enter multiple statuses
	Status *StatusRLDParam `json:"status,omitempty"`
}

// DecodersControllerGetDecodersFilesParams defines parameters for DecodersControllerGetDecodersFiles.
type DecodersControllerGetDecodersFilesParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Filter by filename
	Filename *Filename `json:"filename,omitempty"`

	// Filter by relative directory name
	RelativeDirname *GetDirnamesPath `json:"relative_dirname,omitempty"`

	// Filter by list status. Use commas to enter multiple statuses
	Status *StatusRLDParam `json:"status,omitempty"`
}

// DecodersControllerGetDownloadFileParams defines parameters for DecodersControllerGetDownloadFile.
type DecodersControllerGetDownloadFileParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// DecodersControllerGetDecodersParentsParams defines parameters for DecodersControllerGetDecodersParents.
type DecodersControllerGetDecodersParentsParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`
}

// ExperimentalControllerGetCisCatResultsParams defines parameters for ExperimentalControllerGetCisCatResults.
type ExperimentalControllerGetCisCatResultsParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of agent IDs (separated by comma), all agents selected by default if not specified
	AgentsList *AgentsList `json:"agents_list,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by benchmark type
	Benchmark *Benchmark `json:"benchmark,omitempty"`

	// Filter by evaluated profile
	Profile *Profile `json:"profile,omitempty"`

	// Filter by passed checks
	Pass *Pass `json:"pass,omitempty"`

	// Filter by failed checks
	Fail *Fail `json:"fail,omitempty"`

	// Filter by encountered errors
	Error *Error `json:"error,omitempty"`

	// Filter by not checked
	Notchecked *Notchecked `json:"notchecked,omitempty"`

	// Filter by unknown results
	Unknown *Unknown `json:"unknown,omitempty"`

	// Filter by final score
	Score *Score `json:"score,omitempty"`
}

// ExperimentalControllerClearSyscheckDatabaseParams defines parameters for ExperimentalControllerClearSyscheckDatabase.
type ExperimentalControllerClearSyscheckDatabaseParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of agent IDs (separated by comma), use the keyword `all` to select all agents
	AgentsList AgentsListDelete `json:"agents_list"`
}

// ExperimentalControllerGetHardwareInfoParams defines parameters for ExperimentalControllerGetHardwareInfo.
type ExperimentalControllerGetHardwareInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of agent IDs (separated by comma), all agents selected by default if not specified
	AgentsList *AgentsList `json:"agents_list,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by ram.free
	RamFree *RamFree `json:"ram.free,omitempty"`

	// Filter by ram.total
	RamTotal *RamTotal `json:"ram.total,omitempty"`

	// Filter by cpu.cores
	CpuCores *CpuCores `json:"cpu.cores,omitempty"`

	// Filter by cpu.mhz
	CpuMhz *CpuMhz `json:"cpu.mhz,omitempty"`

	// Filter by cpu.name
	CpuName *CpuName `json:"cpu.name,omitempty"`

	// Filter by board_serial
	BoardSerial *BoardSerial `json:"board_serial,omitempty"`
}

// ExperimentalControllerGetHotfixesInfoParams defines parameters for ExperimentalControllerGetHotfixesInfo.
type ExperimentalControllerGetHotfixesInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of agent IDs (separated by comma), all agents selected by default if not specified
	AgentsList *AgentsList `json:"agents_list,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by hotfix
	Hotfix *Hotfix `json:"hotfix,omitempty"`
}

// ExperimentalControllerGetNetworkAddressInfoParams defines parameters for ExperimentalControllerGetNetworkAddressInfo.
type ExperimentalControllerGetNetworkAddressInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of agent IDs (separated by comma), all agents selected by default if not specified
	AgentsList *AgentsList `json:"agents_list,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by IP protocol
	Proto *Proto `json:"proto,omitempty"`

	// Filter by IP address
	Address *Address `json:"address,omitempty"`

	// Filter by broadcast direction
	Broadcast *Broadcast `json:"broadcast,omitempty"`

	// Filter by netmask
	Netmask *Netmask `json:"netmask,omitempty"`
}

// ExperimentalControllerGetNetworkInterfaceInfoParams defines parameters for ExperimentalControllerGetNetworkInterfaceInfo.
type ExperimentalControllerGetNetworkInterfaceInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of agent IDs (separated by comma), all agents selected by default if not specified
	AgentsList *AgentsList `json:"agents_list,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by agent name
	Name *Name `json:"name,omitempty"`

	// Filter by adapter
	Adapter *Adapter `json:"adapter,omitempty"`

	// Type of network
	Type *TypeSyscollector `json:"type,omitempty"`

	// Filter by state
	State *State `json:"state,omitempty"`

	// Filter by mtu
	Mtu *Mtu `json:"mtu,omitempty"`

	// Filter by tx.packets
	TxPackets *TxPackets `json:"tx.packets,omitempty"`

	// Filter by rx.packets
	RxPackets *RxPackets `json:"rx.packets,omitempty"`

	// Filter by tx.bytes
	TxBytes *TxBytes `json:"tx.bytes,omitempty"`

	// Filter by rx.bytes
	RxBytes *RxBytes `json:"rx.bytes,omitempty"`

	// Filter by tx.errors
	TxErrors *TxErrors `json:"tx.errors,omitempty"`

	// Filter by rx.errors
	RxErrors *RxErrors `json:"rx.errors,omitempty"`

	// Filter by tx.dropped
	TxDropped *TxDropped `json:"tx.dropped,omitempty"`

	// Filter by rx.dropped
	RxDropped *RxDropped `json:"rx.dropped,omitempty"`
}

// ExperimentalControllerGetNetworkProtocolInfoParams defines parameters for ExperimentalControllerGetNetworkProtocolInfo.
type ExperimentalControllerGetNetworkProtocolInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of agent IDs (separated by comma), all agents selected by default if not specified
	AgentsList *AgentsList `json:"agents_list,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by network interface
	Iface *Iface `json:"iface,omitempty"`

	// Type of network
	Type *TypeSyscollector `json:"type,omitempty"`

	// Filter by network gateway
	Gateway *Gateway `json:"gateway,omitempty"`

	// Filter by network dhcp (enabled or disabled)
	Dhcp *Dhcp `json:"dhcp,omitempty"`
}

// ExperimentalControllerGetOsInfoParams defines parameters for ExperimentalControllerGetOsInfo.
type ExperimentalControllerGetOsInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of agent IDs (separated by comma), all agents selected by default if not specified
	AgentsList *AgentsList `json:"agents_list,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by OS name
	OsName *OsName `json:"os.name,omitempty"`

	// Filter by architecture
	Architecture *Architecture `json:"architecture,omitempty"`

	// Filter by OS version
	OsVersion *OsVersion `json:"os.version,omitempty"`

	// Filter by agents version
	Version *Version `json:"version,omitempty"`

	// Filter by release
	Release *Release `json:"release,omitempty"`
}

// ExperimentalControllerGetPackagesInfoParams defines parameters for ExperimentalControllerGetPackagesInfo.
type ExperimentalControllerGetPackagesInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of agent IDs (separated by comma), all agents selected by default if not specified
	AgentsList *AgentsList `json:"agents_list,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by vendor
	Vendor *Vendor `json:"vendor,omitempty"`

	// Filter by agent name
	Name *Name `json:"name,omitempty"`

	// Filter by architecture
	Architecture *Architecture `json:"architecture,omitempty"`

	// Filter by file format. For example 'deb' will output deb files
	Format *FileFormat `json:"format,omitempty"`

	// Filter by version name
	Version *PackageVersion `json:"version,omitempty"`
}

// ExperimentalControllerGetPortsInfoParams defines parameters for ExperimentalControllerGetPortsInfo.
type ExperimentalControllerGetPortsInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of agent IDs (separated by comma), all agents selected by default if not specified
	AgentsList *AgentsList `json:"agents_list,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by pid
	Pid *Pid `json:"pid,omitempty"`

	// Filter by protocol
	Protocol *Protocol `json:"protocol,omitempty"`

	// Filter by Local IP
	LocalIp *LocalIp `json:"local.ip,omitempty"`

	// Filter by Local Port
	LocalPort *LocalPort `json:"local.port,omitempty"`

	// Filter by Remote IP
	RemoteIp *RemoteIp `json:"remote.ip,omitempty"`

	// Filter by tx_queue
	TxQueue *TxQueue `json:"tx_queue,omitempty"`

	// Filter by state
	State *State `json:"state,omitempty"`

	// Filter by process name
	Process *Process `json:"process,omitempty"`
}

// ExperimentalControllerGetProcessesInfoParams defines parameters for ExperimentalControllerGetProcessesInfo.
type ExperimentalControllerGetProcessesInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of agent IDs (separated by comma), all agents selected by default if not specified
	AgentsList *AgentsList `json:"agents_list,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by process pid
	Pid *ProcessPid `json:"pid,omitempty"`

	// Filter by process state
	State *ProcessState `json:"state,omitempty"`

	// Filter by process parent pid
	Ppid *Ppid `json:"ppid,omitempty"`

	// Filter by process egroup
	Egroup *Egroup `json:"egroup,omitempty"`

	// Filter by process euser
	Euser *Euser `json:"euser,omitempty"`

	// Filter by process fgroup
	Fgroup *Fgroup `json:"fgroup,omitempty"`

	// Filter by process name
	Name *ProcessName `json:"name,omitempty"`

	// Filter by process nlwp
	Nlwp *Nlwp `json:"nlwp,omitempty"`

	// Filter by process pgrp
	Pgrp *Pgrp `json:"pgrp,omitempty"`

	// Filter by process priority
	Priority *Priority `json:"priority,omitempty"`

	// Filter by process rgroup
	Rgroup *Rgroup `json:"rgroup,omitempty"`

	// Filter by process ruser
	Ruser *Ruser `json:"ruser,omitempty"`

	// Filter by process sgroup
	Sgroup *Sgroup `json:"sgroup,omitempty"`

	// Filter by process suser
	Suser *Suser `json:"suser,omitempty"`
}

// AgentsControllerDeleteGroupsParams defines parameters for AgentsControllerDeleteGroups.
type AgentsControllerDeleteGroupsParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of group IDs (separated by comma), use the keyword 'all' to select all groups
	GroupsList GroupsListDelete `json:"groups_list"`
}

// AgentsControllerGetListGroupParams defines parameters for AgentsControllerGetListGroup.
type AgentsControllerGetListGroupParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// List of group IDs (separated by comma), all groups selected by default if not specified
	GroupsList *GroupsList `json:"groups_list,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select algorithm to generate the returned checksums
	Hash *Hash `json:"hash,omitempty"`
}

// AgentsControllerPostGroupParams defines parameters for AgentsControllerPostGroup.
type AgentsControllerPostGroupParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Group ID. (Name of the group)
	GroupId GroupIdQuery `json:"group_id"`
}

// AgentsControllerGetAgentsInGroupParams defines parameters for AgentsControllerGetAgentsInGroup.
type AgentsControllerGetAgentsInGroupParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Filter by agent status (use commas to enter multiple statuses)
	Status *StatusAgentParam `json:"status,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`
}

// AgentsControllerGetGroupConfigParams defines parameters for AgentsControllerGetGroupConfig.
type AgentsControllerGetGroupConfigParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`
}

// AgentsControllerPutGroupConfigParams defines parameters for AgentsControllerPutGroupConfig.
type AgentsControllerPutGroupConfigParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// AgentsControllerGetGroupFilesParams defines parameters for AgentsControllerGetGroupFiles.
type AgentsControllerGetGroupFilesParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select algorithm to generate the returned checksums
	Hash *Hash `json:"hash,omitempty"`
}

// AgentsControllerGetGroupFileJsonParams defines parameters for AgentsControllerGetGroupFileJson.
type AgentsControllerGetGroupFileJsonParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Type of file
	Type *TypeAgents `json:"type,omitempty"`
}

// AgentsControllerGetGroupFileXmlParams defines parameters for AgentsControllerGetGroupFileXml.
type AgentsControllerGetGroupFileXmlParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Type of file
	Type *TypeAgents `json:"type,omitempty"`
}

// ListsControllerGetListsParams defines parameters for ListsControllerGetLists.
type ListsControllerGetListsParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Filter by relative directory name
	RelativeDirname *GetDirnamesPath `json:"relative_dirname,omitempty"`

	// Filter by filename
	Filename *Filename `json:"filename,omitempty"`
}

// ListsControllerGetListsFilesParams defines parameters for ListsControllerGetListsFiles.
type ListsControllerGetListsFilesParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Filter by relative directory name
	RelativeDirname *GetDirnamesPath `json:"relative_dirname,omitempty"`

	// Filter by filename
	Filename *Filename `json:"filename,omitempty"`
}

// ManagerControllerGetApiConfigParams defines parameters for ManagerControllerGetApiConfig.
type ManagerControllerGetApiConfigParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ManagerControllerGetConfigurationParams defines parameters for ManagerControllerGetConfiguration.
type ManagerControllerGetConfigurationParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Indicates the wazuh configuration section
	Section *Section `json:"section,omitempty"`

	// Indicate a section child. E.g, fields for *ruleset* section are: decoder_dir, rule_dir, etc
	Field *Field `json:"field,omitempty"`
}

// ManagerControllerGetConfValidationParams defines parameters for ManagerControllerGetConfValidation.
type ManagerControllerGetConfValidationParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ManagerControllerGetManagerConfigOndemandParams defines parameters for ManagerControllerGetManagerConfigOndemand.
type ManagerControllerGetManagerConfigOndemandParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ManagerControllerDeleteFilesParams defines parameters for ManagerControllerDeleteFiles.
type ManagerControllerDeleteFilesParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Filepath to delete file. (Relative to wazuh installation folder)
	Path DeleteFilesPath `json:"path"`
}

// ManagerControllerGetFilesParams defines parameters for ManagerControllerGetFiles.
type ManagerControllerGetFilesParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Filepath to return file. (Relative to wazuh installation folder)
	Path GetFilesPath `json:"path"`
}

// ManagerControllerPutFilesParams defines parameters for ManagerControllerPutFiles.
type ManagerControllerPutFilesParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Filepath to upload/edit file. (Relative to wazuh installation folder)
	Path EditFilesPath `json:"path"`

	// If set to false, an exception will be raised when updating contents of an already existing filename
	Overwrite *Overwrite `json:"overwrite,omitempty"`
}

// ManagerControllerGetInfoParams defines parameters for ManagerControllerGetInfo.
type ManagerControllerGetInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ManagerControllerGetLogParams defines parameters for ManagerControllerGetLog.
type ManagerControllerGetLogParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Wazuh component that logged the event
	Tag *Tag `json:"tag,omitempty"`

	// Filter by log level
	Level *LogLevel `json:"level,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`
}

// ManagerControllerGetLogSummaryParams defines parameters for ManagerControllerGetLogSummary.
type ManagerControllerGetLogSummaryParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ManagerControllerPutRestartParams defines parameters for ManagerControllerPutRestart.
type ManagerControllerPutRestartParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ManagerControllerGetStatsParams defines parameters for ManagerControllerGetStats.
type ManagerControllerGetStatsParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Date to obtain statistical information from. Format YYYY-MM-DD
	Date *Date `json:"date,omitempty"`
}

// ManagerControllerGetStatsAnalysisdParams defines parameters for ManagerControllerGetStatsAnalysisd.
type ManagerControllerGetStatsAnalysisdParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ManagerControllerGetStatsHourlyParams defines parameters for ManagerControllerGetStatsHourly.
type ManagerControllerGetStatsHourlyParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ManagerControllerGetStatsRemotedParams defines parameters for ManagerControllerGetStatsRemoted.
type ManagerControllerGetStatsRemotedParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ManagerControllerGetStatsWeeklyParams defines parameters for ManagerControllerGetStatsWeekly.
type ManagerControllerGetStatsWeeklyParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// ManagerControllerGetStatusParams defines parameters for ManagerControllerGetStatus.
type ManagerControllerGetStatusParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// MitreControllerGetAttackParams defines parameters for MitreControllerGetAttack.
type MitreControllerGetAttackParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// MITRE attack ID
	Id *AttackId `json:"id,omitempty"`

	// Show results filtered by phase
	PhaseName *PhaseName `json:"phase_name,omitempty"`

	// Show results filtered by platform
	PlatformName *PlatformName `json:"platform_name,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`
}

// OverviewControllerGetOverviewAgentsParams defines parameters for OverviewControllerGetOverviewAgents.
type OverviewControllerGetOverviewAgentsParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// RulesControllerGetRulesParams defines parameters for RulesControllerGetRules.
type RulesControllerGetRulesParams struct {

	// List of rule IDs
	RuleIds *RuleIds `json:"rule_ids,omitempty"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`

	// Filter by list status. Use commas to enter multiple statuses
	Status *StatusRLDParam `json:"status,omitempty"`

	// Filter by rule group
	Group *Group `json:"group,omitempty"`

	// Filter by rule level. Can be a single level (4) or an interval (2-4)
	Level *Level `json:"level,omitempty"`

	// Filter by filename
	Filename *Filename `json:"filename,omitempty"`

	// Filter by relative directory name
	RelativeDirname *GetDirnamesPath `json:"relative_dirname,omitempty"`

	// Filter by PCI_DSS requirement name
	PciDss *PciDss `json:"pci_dss,omitempty"`

	// Filter by GDPR requirement
	Gdpr *Gdpr `json:"gdpr,omitempty"`

	// Filter by GPG13 requirement
	Gpg13 *Gpg13 `json:"gpg13,omitempty"`

	// Filter by HIPAA requirement
	Hipaa *Hipaa `json:"hipaa,omitempty"`

	// Filter by NIST-800-53 requirement
	Nist80053 *Nist80053 `json:"nist-800-53,omitempty"`

	// Filters by TSC requirement
	Tsc *Tsc `json:"tsc,omitempty"`

	// Filters by MITRE attack ID
	Mitre *Mitre `json:"mitre,omitempty"`
}

// RulesControllerGetRulesFilesParams defines parameters for RulesControllerGetRulesFiles.
type RulesControllerGetRulesFilesParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Filter by relative directory name
	RelativeDirname *GetDirnamesPath `json:"relative_dirname,omitempty"`

	// Filter by filename
	Filename *Filename `json:"filename,omitempty"`

	// Filter by list status. Use commas to enter multiple statuses
	Status *StatusRLDParam `json:"status,omitempty"`
}

// RulesControllerGetDownloadFileParams defines parameters for RulesControllerGetDownloadFile.
type RulesControllerGetDownloadFileParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// RulesControllerGetRulesGroupsParams defines parameters for RulesControllerGetRulesGroups.
type RulesControllerGetRulesGroupsParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`
}

// RulesControllerGetRulesRequirementParams defines parameters for RulesControllerGetRulesRequirement.
type RulesControllerGetRulesRequirementParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`
}

// ScaControllerGetScaAgentParams defines parameters for ScaControllerGetScaAgent.
type ScaControllerGetScaAgentParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Filter by policy name
	Name *ScaName `json:"name,omitempty"`

	// Filter by policy description
	Description *Description `json:"description,omitempty"`

	// Filter by references
	References *References `json:"references,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`
}

// ScaControllerGetScaChecksParams defines parameters for ScaControllerGetScaChecks.
type ScaControllerGetScaChecksParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Filter by title
	Title *Title `json:"title,omitempty"`

	// Filter by policy description
	Description *Description `json:"description,omitempty"`

	// Filter by rationale
	Rationale *Rationale `json:"rationale,omitempty"`

	// Filter by remediation
	Remediation *Remediation `json:"remediation,omitempty"`

	// Filter by command
	Command *Command `json:"command,omitempty"`

	// Filter by status
	Status *Status `json:"status,omitempty"`

	// Filter by reason
	Reason *Reason `json:"reason,omitempty"`

	// Filter by full path
	File *FullPathFilter `json:"file,omitempty"`

	// Filter by process name
	Process *Process `json:"process,omitempty"`

	// Filter by directory
	Directory *Directory `json:"directory,omitempty"`

	// Filter by registry
	Registry *Registry `json:"registry,omitempty"`

	// Filter by references
	References *References `json:"references,omitempty"`

	// Filter by result
	Result *Result `json:"result,omitempty"`

	// Filter by condition
	Condition *Condition `json:"condition,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`
}

// SecurityControllerGetRbacActionsParams defines parameters for SecurityControllerGetRbacActions.
type SecurityControllerGetRbacActionsParams struct {

	// Look for the RBAC actions which are related to the specified endpoint
	Endpoint *Endpoint `json:"endpoint,omitempty"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`
}

// SecurityControllerDeleteSecurityConfigParams defines parameters for SecurityControllerDeleteSecurityConfig.
type SecurityControllerDeleteSecurityConfigParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerGetSecurityConfigParams defines parameters for SecurityControllerGetSecurityConfig.
type SecurityControllerGetSecurityConfigParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerPutSecurityConfigJSONBody defines parameters for SecurityControllerPutSecurityConfig.
type SecurityControllerPutSecurityConfigJSONBody SecurityConfiguration

// SecurityControllerPutSecurityConfigParams defines parameters for SecurityControllerPutSecurityConfig.
type SecurityControllerPutSecurityConfigParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerRemovePoliciesParams defines parameters for SecurityControllerRemovePolicies.
type SecurityControllerRemovePoliciesParams struct {

	// List of policy IDs (separated by comma), use the keyword 'all' to select all policies
	PolicyIds PolicyIdsRbacDelete `json:"policy_ids"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerGetPoliciesParams defines parameters for SecurityControllerGetPolicies.
type SecurityControllerGetPoliciesParams struct {

	// List of policy IDs
	PolicyIds *PolicyIdsRbac `json:"policy_ids,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerAddPolicyJSONBody defines parameters for SecurityControllerAddPolicy.
type SecurityControllerAddPolicyJSONBody PoliciesRequest

// SecurityControllerAddPolicyParams defines parameters for SecurityControllerAddPolicy.
type SecurityControllerAddPolicyParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerUpdatePolicyJSONBody defines parameters for SecurityControllerUpdatePolicy.
type SecurityControllerUpdatePolicyJSONBody PoliciesRequestNoRequired

// SecurityControllerUpdatePolicyParams defines parameters for SecurityControllerUpdatePolicy.
type SecurityControllerUpdatePolicyParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerGetRbacResourcesParams defines parameters for SecurityControllerGetRbacResources.
type SecurityControllerGetRbacResourcesParams struct {

	// List of current RBAC's resources.
	Resource *ResourceList `json:"resource,omitempty"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`
}

// SecurityControllerRemoveRolesParams defines parameters for SecurityControllerRemoveRoles.
type SecurityControllerRemoveRolesParams struct {

	// List of role IDs (separated by comma), use the keyword 'all' to select all roles
	RoleIds RoleIdsDelete `json:"role_ids"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerGetRolesParams defines parameters for SecurityControllerGetRoles.
type SecurityControllerGetRolesParams struct {

	// List of role IDs (separated by comma)
	RoleIds *RoleIds `json:"role_ids,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerAddRoleJSONBody defines parameters for SecurityControllerAddRole.
type SecurityControllerAddRoleJSONBody RolesRequest

// SecurityControllerAddRoleParams defines parameters for SecurityControllerAddRole.
type SecurityControllerAddRoleParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerUpdateRoleJSONBody defines parameters for SecurityControllerUpdateRole.
type SecurityControllerUpdateRoleJSONBody RolesRequestNoRequired

// SecurityControllerUpdateRoleParams defines parameters for SecurityControllerUpdateRole.
type SecurityControllerUpdateRoleParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerRemoveRolePolicyParams defines parameters for SecurityControllerRemoveRolePolicy.
type SecurityControllerRemoveRolePolicyParams struct {

	// List of policy IDs (separated by comma), use the keyword 'all' to select all policies
	PolicyIds PolicyIdsRbacDelete `json:"policy_ids"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerSetRolePolicyParams defines parameters for SecurityControllerSetRolePolicy.
type SecurityControllerSetRolePolicyParams struct {

	// List of policy IDs
	PolicyIds PolicyIdsRbacRequired `json:"policy_ids"`

	// Security position for roles/policies
	Position *SecurityPosition `json:"position,omitempty"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerRemoveRoleRuleParams defines parameters for SecurityControllerRemoveRoleRule.
type SecurityControllerRemoveRoleRuleParams struct {

	// List of rule IDs (separated by comma), use the keyword 'all' to select all rules
	RuleIds SecurityRuleIdsDelete `json:"rule_ids"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerSetRoleRuleParams defines parameters for SecurityControllerSetRoleRule.
type SecurityControllerSetRoleRuleParams struct {

	// List of rule IDs (separated by comma)
	RuleIds SecurityRuleIdsRequired `json:"rule_ids"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerRemoveRulesParams defines parameters for SecurityControllerRemoveRules.
type SecurityControllerRemoveRulesParams struct {

	// List of rule IDs (separated by comma), use the keyword 'all' to select all rules
	RuleIds SecurityRuleIdsDelete `json:"rule_ids"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerGetRulesParams defines parameters for SecurityControllerGetRules.
type SecurityControllerGetRulesParams struct {

	// List of rule IDs (separated by comma)
	RuleIds *SecurityRuleIds `json:"rule_ids,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerAddRuleJSONBody defines parameters for SecurityControllerAddRule.
type SecurityControllerAddRuleJSONBody SecurityRulesRequest

// SecurityControllerAddRuleParams defines parameters for SecurityControllerAddRule.
type SecurityControllerAddRuleParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerUpdateRuleJSONBody defines parameters for SecurityControllerUpdateRule.
type SecurityControllerUpdateRuleJSONBody SecurityRulesRequestNoRequired

// SecurityControllerUpdateRuleParams defines parameters for SecurityControllerUpdateRule.
type SecurityControllerUpdateRuleParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerLoginUserParams defines parameters for SecurityControllerLoginUser.
type SecurityControllerLoginUserParams struct {

	// Format response in plain text
	Raw *Raw `json:"raw,omitempty"`
}

// SecurityControllerLoginUserJSONBody defines parameters for SecurityControllerLoginUser.
type SecurityControllerLoginUserJSONBody map[string]interface{}

// SecurityControllerDeleteUsersParams defines parameters for SecurityControllerDeleteUsers.
type SecurityControllerDeleteUsersParams struct {

	// List of user IDs (separated by comma), use the keyword 'all' to select all users
	UserIds UserIdsDelete `json:"user_ids"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerGetUsersParams defines parameters for SecurityControllerGetUsers.
type SecurityControllerGetUsersParams struct {

	// List of user IDs (separated by comma)
	UserIds *UserIds `json:"user_ids,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerCreateUserJSONBody defines parameters for SecurityControllerCreateUser.
type SecurityControllerCreateUserJSONBody struct {
	AllowRunAs *bool  `json:"allow_run_as,omitempty"`
	Password   string `json:"password"`
	Username   string `json:"username"`
}

// SecurityControllerCreateUserParams defines parameters for SecurityControllerCreateUser.
type SecurityControllerCreateUserParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerGetUserMeParams defines parameters for SecurityControllerGetUserMe.
type SecurityControllerGetUserMeParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerGetUserMePoliciesParams defines parameters for SecurityControllerGetUserMePolicies.
type SecurityControllerGetUserMePoliciesParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`
}

// SecurityControllerUpdateUserJSONBody defines parameters for SecurityControllerUpdateUser.
type SecurityControllerUpdateUserJSONBody struct {
	AllowRunAs *bool   `json:"allow_run_as,omitempty"`
	Password   *string `json:"password,omitempty"`
}

// SecurityControllerUpdateUserParams defines parameters for SecurityControllerUpdateUser.
type SecurityControllerUpdateUserParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerRemoveUserRoleParams defines parameters for SecurityControllerRemoveUserRole.
type SecurityControllerRemoveUserRoleParams struct {

	// List of role IDs (separated by comma), use the keyword 'all' to select all roles
	RoleIds RoleIdsDelete `json:"role_ids"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SecurityControllerSetUserRoleParams defines parameters for SecurityControllerSetUserRole.
type SecurityControllerSetUserRoleParams struct {

	// List of role IDs (separated by comma)
	RoleIds RoleIdsRequired `json:"role_ids"`

	// Security position for roles/policies
	Position *SecurityPosition `json:"position,omitempty"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SyscheckControllerPutSyscheckParams defines parameters for SyscheckControllerPutSyscheck.
type SyscheckControllerPutSyscheckParams struct {

	// List of agent IDs (separated by comma), all agents selected by default if not specified
	AgentsList *AgentsList `json:"agents_list,omitempty"`

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SyscheckControllerDeleteSyscheckAgentParams defines parameters for SyscheckControllerDeleteSyscheckAgent.
type SyscheckControllerDeleteSyscheckAgentParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SyscheckControllerGetSyscheckAgentParams defines parameters for SyscheckControllerGetSyscheckAgent.
type SyscheckControllerGetSyscheckAgentParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by full path
	File *FullPathFilter `json:"file,omitempty"`

	// Filter by file type
	Type *Filetype `json:"type,omitempty"`

	// Return a summary grouping by filename
	Summary *Summary `json:"summary,omitempty"`

	// Filter files with the specified MD5 checksum
	Md5 *Md5 `json:"md5,omitempty"`

	// Filter files with the specified SHA1 checksum
	Sha1 *Sha1 `json:"sha1,omitempty"`

	// Filter files with the specified SHA256 checksum
	Sha256 *Sha256 `json:"sha256,omitempty"`

	// Filter files with the specified hash (md5, sha256 or sha1)
	Hash *Hashfilter `json:"hash,omitempty"`

	// Look for distinct values.
	Distinct *Distinct `json:"distinct,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`
}

// SyscheckControllerGetLastScanAgentParams defines parameters for SyscheckControllerGetLastScanAgent.
type SyscheckControllerGetLastScanAgentParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`
}

// SyscollectorControllerGetHardwareInfoParams defines parameters for SyscollectorControllerGetHardwareInfo.
type SyscollectorControllerGetHardwareInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`
}

// SyscollectorControllerGetHotfixInfoParams defines parameters for SyscollectorControllerGetHotfixInfo.
type SyscollectorControllerGetHotfixInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by hotfix
	Hotfix *Hotfix `json:"hotfix,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`
}

// SyscollectorControllerGetNetworkAddressInfoParams defines parameters for SyscollectorControllerGetNetworkAddressInfo.
type SyscollectorControllerGetNetworkAddressInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by network interface
	Iface *Iface `json:"iface,omitempty"`

	// Filter by IP protocol
	Proto *Proto `json:"proto,omitempty"`

	// Filter by IP address
	Address *Address `json:"address,omitempty"`

	// Filter by broadcast direction
	Broadcast *Broadcast `json:"broadcast,omitempty"`

	// Filter by netmask
	Netmask *Netmask `json:"netmask,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`
}

// SyscollectorControllerGetNetworkInterfaceInfoParams defines parameters for SyscollectorControllerGetNetworkInterfaceInfo.
type SyscollectorControllerGetNetworkInterfaceInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by agent name
	Name *Name `json:"name,omitempty"`

	// Filter by adapter
	Adapter *Adapter `json:"adapter,omitempty"`

	// Type of file
	Type *Typesys `json:"type,omitempty"`

	// Filter by state
	State *State `json:"state,omitempty"`

	// Filter by mtu
	Mtu *Mtu `json:"mtu,omitempty"`

	// Filter by tx.packets
	TxPackets *TxPackets `json:"tx.packets,omitempty"`

	// Filter by rx.packets
	RxPackets *RxPackets `json:"rx.packets,omitempty"`

	// Filter by tx.bytes
	TxBytes *TxBytes `json:"tx.bytes,omitempty"`

	// Filter by rx.bytes
	RxBytes *RxBytes `json:"rx.bytes,omitempty"`

	// Filter by tx.errors
	TxErrors *TxErrors `json:"tx.errors,omitempty"`

	// Filter by rx.errors
	RxErrors *RxErrors `json:"rx.errors,omitempty"`

	// Filter by tx.dropped
	TxDropped *TxDropped `json:"tx.dropped,omitempty"`

	// Filter by rx.dropped
	RxDropped *RxDropped `json:"rx.dropped,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`
}

// SyscollectorControllerGetNetworkProtocolInfoParams defines parameters for SyscollectorControllerGetNetworkProtocolInfo.
type SyscollectorControllerGetNetworkProtocolInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by network interface
	Iface *Iface `json:"iface,omitempty"`

	// Type of network
	Type *TypeSyscollector `json:"type,omitempty"`

	// Filter by network gateway
	Gateway *Gateway `json:"gateway,omitempty"`

	// Filter by network dhcp (enabled or disabled)
	Dhcp *Dhcp `json:"dhcp,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`
}

// SyscollectorControllerGetOsInfoParams defines parameters for SyscollectorControllerGetOsInfo.
type SyscollectorControllerGetOsInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`
}

// SyscollectorControllerGetPackagesInfoParams defines parameters for SyscollectorControllerGetPackagesInfo.
type SyscollectorControllerGetPackagesInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by vendor
	Vendor *Vendor `json:"vendor,omitempty"`

	// Filter by agent name
	Name *Name `json:"name,omitempty"`

	// Filter by architecture
	Architecture *Architecture `json:"architecture,omitempty"`

	// Filter by file format. For example 'deb' will output deb files
	Format *FileFormat `json:"format,omitempty"`

	// Filter by version name
	Version *PackageVersion `json:"version,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`
}

// SyscollectorControllerGetPortsInfoParams defines parameters for SyscollectorControllerGetPortsInfo.
type SyscollectorControllerGetPortsInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by pid
	Pid *Pid `json:"pid,omitempty"`

	// Filter by protocol
	Protocol *Protocol `json:"protocol,omitempty"`

	// Filter by Local IP
	LocalIp *LocalIp `json:"local.ip,omitempty"`

	// Filter by Local Port
	LocalPort *LocalPort `json:"local.port,omitempty"`

	// Filter by Remote IP
	RemoteIp *RemoteIp `json:"remote.ip,omitempty"`

	// Filter by tx_queue
	TxQueue *TxQueue `json:"tx_queue,omitempty"`

	// Filter by state
	State *State `json:"state,omitempty"`

	// Filter by process name
	Process *Process `json:"process,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`
}

// SyscollectorControllerGetProcessesInfoParams defines parameters for SyscollectorControllerGetProcessesInfo.
type SyscollectorControllerGetProcessesInfoParams struct {

	// Show results in human-readable format
	Pretty *Pretty `json:"pretty,omitempty"`

	// Disable timeout response
	WaitForComplete *WaitForComplete `json:"wait_for_complete,omitempty"`

	// First element to return in the collection
	Offset *Offset `json:"offset,omitempty"`

	// Maximum number of elements to return
	Limit *Limit `json:"limit,omitempty"`

	// Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Sort *Sort `json:"sort,omitempty"`

	// Look for elements containing the specified string. To obtain a complementary search, use '-' at the beggining
	Search *Search `json:"search,omitempty"`

	// Select which fields to return (separated by comma). Use '.' for nested fields. For example, '{field1: field2}' may be selected with 'field1.field2'
	Select *Select `json:"select,omitempty"`

	// Filter by process pid
	Pid *ProcessPid `json:"pid,omitempty"`

	// Filter by process state
	State *ProcessState `json:"state,omitempty"`

	// Filter by process parent pid
	Ppid *Ppid `json:"ppid,omitempty"`

	// Filter by process egroup
	Egroup *Egroup `json:"egroup,omitempty"`

	// Filter by process euser
	Euser *Euser `json:"euser,omitempty"`

	// Filter by process fgroup
	Fgroup *Fgroup `json:"fgroup,omitempty"`

	// Filter by process name
	Name *ProcessName `json:"name,omitempty"`

	// Filter by process nlwp
	Nlwp *Nlwp `json:"nlwp,omitempty"`

	// Filter by process pgrp
	Pgrp *Pgrp `json:"pgrp,omitempty"`

	// Filter by process priority
	Priority *Priority `json:"priority,omitempty"`

	// Filter by process rgroup
	Rgroup *Rgroup `json:"rgroup,omitempty"`

	// Filter by process ruser
	Ruser *Ruser `json:"ruser,omitempty"`

	// Filter by process sgroup
	Sgroup *Sgroup `json:"sgroup,omitempty"`

	// Filter by process suser
	Suser *Suser `json:"suser,omitempty"`

	// Query to filter results by. For example q=&quot;status=active&quot;
	Q *Query `json:"q,omitempty"`
}

// ActiveResponseControllerRunCommandRequestBody defines body for ActiveResponseControllerRunCommand for application/json ContentType.
type ActiveResponseControllerRunCommandJSONRequestBody ActiveResponseControllerRunCommandJSONBody

// AgentsControllerAddAgentRequestBody defines body for AgentsControllerAddAgent for application/json ContentType.
type AgentsControllerAddAgentJSONRequestBody AgentsControllerAddAgentJSONBody

// AgentsControllerInsertAgentRequestBody defines body for AgentsControllerInsertAgent for application/json ContentType.
type AgentsControllerInsertAgentJSONRequestBody AgentsControllerInsertAgentJSONBody

// SecurityControllerPutSecurityConfigRequestBody defines body for SecurityControllerPutSecurityConfig for application/json ContentType.
type SecurityControllerPutSecurityConfigJSONRequestBody SecurityControllerPutSecurityConfigJSONBody

// SecurityControllerAddPolicyRequestBody defines body for SecurityControllerAddPolicy for application/json ContentType.
type SecurityControllerAddPolicyJSONRequestBody SecurityControllerAddPolicyJSONBody

// SecurityControllerUpdatePolicyRequestBody defines body for SecurityControllerUpdatePolicy for application/json ContentType.
type SecurityControllerUpdatePolicyJSONRequestBody SecurityControllerUpdatePolicyJSONBody

// SecurityControllerAddRoleRequestBody defines body for SecurityControllerAddRole for application/json ContentType.
type SecurityControllerAddRoleJSONRequestBody SecurityControllerAddRoleJSONBody

// SecurityControllerUpdateRoleRequestBody defines body for SecurityControllerUpdateRole for application/json ContentType.
type SecurityControllerUpdateRoleJSONRequestBody SecurityControllerUpdateRoleJSONBody

// SecurityControllerAddRuleRequestBody defines body for SecurityControllerAddRule for application/json ContentType.
type SecurityControllerAddRuleJSONRequestBody SecurityControllerAddRuleJSONBody

// SecurityControllerUpdateRuleRequestBody defines body for SecurityControllerUpdateRule for application/json ContentType.
type SecurityControllerUpdateRuleJSONRequestBody SecurityControllerUpdateRuleJSONBody

// SecurityControllerLoginUserRequestBody defines body for SecurityControllerLoginUser for application/json ContentType.
type SecurityControllerLoginUserJSONRequestBody SecurityControllerLoginUserJSONBody

// SecurityControllerCreateUserRequestBody defines body for SecurityControllerCreateUser for application/json ContentType.
type SecurityControllerCreateUserJSONRequestBody SecurityControllerCreateUserJSONBody

// SecurityControllerUpdateUserRequestBody defines body for SecurityControllerUpdateUser for application/json ContentType.
type SecurityControllerUpdateUserJSONRequestBody SecurityControllerUpdateUserJSONBody

// Getter for additional properties for ApiError_DapiErrors. Returns the specified
// element and whether it was found
func (a ApiError_DapiErrors) Get(fieldName string) (value struct {
	Error   *string `json:"error,omitempty"`
	Logfile *string `json:"logfile,omitempty"`
}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ApiError_DapiErrors
func (a *ApiError_DapiErrors) Set(fieldName string, value struct {
	Error   *string `json:"error,omitempty"`
	Logfile *string `json:"logfile,omitempty"`
}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]struct {
			Error   *string `json:"error,omitempty"`
			Logfile *string `json:"logfile,omitempty"`
		})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ApiError_DapiErrors to handle AdditionalProperties
func (a *ApiError_DapiErrors) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]struct {
			Error   *string `json:"error,omitempty"`
			Logfile *string `json:"logfile,omitempty"`
		})
		for fieldName, fieldBuf := range object {
			var fieldVal struct {
				Error   *string `json:"error,omitempty"`
				Logfile *string `json:"logfile,omitempty"`
			}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return errors.Wrap(err, fmt.Sprintf("error unmarshaling field %s", fieldName))
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ApiError_DapiErrors to handle AdditionalProperties
func (a ApiError_DapiErrors) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, errors.Wrap(err, fmt.Sprintf("error marshaling '%s'", fieldName))
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for SimpleApiError_Error. Returns the specified
// element and whether it was found
func (a SimpleApiError_Error) Get(fieldName string) (value struct {
	Code        *int32  `json:"code,omitempty"`
	Message     *string `json:"message,omitempty"`
	Remediation *string `json:"remediation,omitempty"`
}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for SimpleApiError_Error
func (a *SimpleApiError_Error) Set(fieldName string, value struct {
	Code        *int32  `json:"code,omitempty"`
	Message     *string `json:"message,omitempty"`
	Remediation *string `json:"remediation,omitempty"`
}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]struct {
			Code        *int32  `json:"code,omitempty"`
			Message     *string `json:"message,omitempty"`
			Remediation *string `json:"remediation,omitempty"`
		})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for SimpleApiError_Error to handle AdditionalProperties
func (a *SimpleApiError_Error) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]struct {
			Code        *int32  `json:"code,omitempty"`
			Message     *string `json:"message,omitempty"`
			Remediation *string `json:"remediation,omitempty"`
		})
		for fieldName, fieldBuf := range object {
			var fieldVal struct {
				Code        *int32  `json:"code,omitempty"`
				Message     *string `json:"message,omitempty"`
				Remediation *string `json:"remediation,omitempty"`
			}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return errors.Wrap(err, fmt.Sprintf("error unmarshaling field %s", fieldName))
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for SimpleApiError_Error to handle AdditionalProperties
func (a SimpleApiError_Error) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, errors.Wrap(err, fmt.Sprintf("error marshaling '%s'", fieldName))
		}
	}
	return json.Marshal(object)
}

func (e *ApiError) Error() string {
	return fmt.Sprintf("%d: %s", e.ApiCode, e.ApiTitle)
}

func (e *RequestError) Error() string {
	return fmt.Sprintf("%d: %s", e.RequestError, e.RequestTitle)
}

func (e *ApiResponse) Error() string {
	return fmt.Sprintf("%d: %s", e.ErrorCode, e.Title())
}
func (e *ApiResponse) Code() int {
	return e.ErrorCode
}
func (e *ApiResponse) Title() string {
	if e.Message == nil {
		return "Error"
	}
	return *e.Message
}

// WazuhError generic Wazuh error
type WazuhError interface {
	Code() int32
	Title() string
	Detail() string
}

// WazuhRequestError information about a failed wazuh request
type WazuhRequestError interface {
	Code() int32
	Title() string
	Detail() string
}

// Code return the error code
func (e *RequestError) Code() int32 {
	if e.RequestError == nil {
		return -1
	}
	return *e.RequestError
}

// Title of the problem
func (e *RequestError) Title() string {
	return e.RequestTitle
}

// Detail of the problem
func (e *RequestError) Detail() string {
	return e.RequestDetail
}

// WazuhAPIError api errors returned by wazuh
type WazuhAPIError interface {
	Code() int32
	Title() string
	Detail() string
	DapiErrors() *ApiError_DapiErrors
	Instance() string
	Remediation() string
}

// Code return the error code
func (e *ApiError) Code() int32 {
	if e.ApiCode == nil {
		return -1
	}
	return *e.ApiCode
}

// Title of the problem
func (e *ApiError) Title() string {
	return e.ApiTitle
}

// Detail of the problem
func (e *ApiError) Detail() string {
	return e.ApiDetail
}

// DAPIErrors optional list of DAPI Errors
func (e *ApiError) DAPIErrors() *ApiError_DapiErrors {
	return e.ApiDapiErrors
}

// Instance information of the affected instance
func (e *ApiError) Instance() string {
	if e.ApiInstance == nil {
		return ""
	}
	return *e.ApiInstance
}

// Remediation hint how to fix the problem
func (e *ApiError) Remediation() string {
	if e.ApiRemediation == nil {
		return ""
	}
	return *e.ApiRemediation
}

// added
